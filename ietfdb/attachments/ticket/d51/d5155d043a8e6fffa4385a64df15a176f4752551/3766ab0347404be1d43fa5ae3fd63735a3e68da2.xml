<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3339 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3339.xml">
<!ENTITY RFC3629 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3629.xml">
<!ENTITY RFC3912 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3912.xml">
<!ENTITY RFC3986 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml">
<!ENTITY RFC4034 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4034.xml">
<!ENTITY RFC5396 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5396.xml">
<!ENTITY RFC5646 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5646.xml">
<!ENTITY RFC5730 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5730.xml">
<!ENTITY RFC5890 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5890.xml">
<!ENTITY RFC5910 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5910.xml">
<!ENTITY RFC5952 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5952.xml">
<!ENTITY RFC6350 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6350.xml">
<!ENTITY RFC6839 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6839.xml">
<!ENTITY RFC7095 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7095.xml">
<!ENTITY RFC7480 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7480.xml">
<!ENTITY RFC7481 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7481.xml">
<!ENTITY RFC7942 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7942.xml">
<!ENTITY RFC8126 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8126.xml">
<!ENTITY RFC8288 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8288.xml">
<!ENTITY RFC8259 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8259.xml">
<!ENTITY I-D.ietf-regext-rfc7482bis SYSTEM 'https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-regext-rfc7482bis.xml'>
]>
<rfc category="std" docName="draft-ietf-regext-rfc7483bis-00" ipr="trust200902" consensus="true">
	<!-- Generated by id2xml 1.5.0 on 2019-12-20T13:25:29Z -->
	<?rfc compact="yes"?>
	<?rfc text-list-symbols="o*+-"?>
	<?rfc subcompact="no"?>
	<?rfc sortrefs="yes"?>
	<?rfc symrefs="yes"?>
	<?rfc strict="yes"?>
	<?rfc toc="yes"?>
	<front>
	<title abbrev="RDAP JSON Responses">JSON Responses for the Registration Data Access Protocol (RDAP)</title>

	<author fullname="Scott Hollenbeck" initials="S." surname="Hollenbeck">
	<organization>Verisign Labs</organization>
	<address><postal><street>12061 Bluemont Way</street>
	<street>Reston, VA  20190</street>
	<street>United States</street>
	</postal>
	<email>shollenbeck@verisign.com</email>
	<uri>https://www.verisignlabs.com/</uri>
	</address>
	</author>
	
	<author fullname="Andy Newton" initials="A." surname="Newton">
	<organization abbrev="AWS">Amazon Web Services, Inc.</organization>
	<address><postal><street>13200 Woodland Park Road</street>
	<city>Herndon</city>
	<region>VA</region>
	<code>20171</code>
	<country>United States of America</country>
	</postal>
	<email>andy@hxr.us</email>
	</address>
	</author>
        <date/>
        <area>Applications and Real-Time</area>
        <workgroup>REGEXT Working Group</workgroup>
        
	<abstract><t>
   This document describes JSON data structures representing
   registration information maintained by Regional Internet Registries
   (RIRs) and Domain Name Registries (DNRs).  These data structures are
   used to form Registration Data Access Protocol (RDAP) query
   responses.</t>

	</abstract>
	</front>

	<middle>
	<section title="Introduction" anchor="sect-1"><t>
   This document describes responses in the JSON <xref target="RFC8259"/> format for
   the queries as defined by the Registration Data Access Protocol Query
   Format <xref target="I-D.ietf-regext-rfc7482bis"/>.  A communication protocol for exchanging queries
   and responses is described in <xref target="RFC7480"/>.</t>

	<section title="Terminology and Definitions" anchor="sect-1.1"><t>
   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in <xref target="RFC2119"/> when
   specified in their uppercase forms.</t>

	<t>
   The following list describes terminology and definitions used
   throughout this document:</t>

	<t><list style="hanging" hangIndent="1"><t hangText="DNR:">
	Domain Name Registry or Domain Name Registrar
	<vspace blankLines="0"/>
	</t>

	<t hangText="LDH:">
	letters, digits, hyphen
	<vspace blankLines="0"/>
	</t>

	<t hangText="member:">
	data found within an object as defined by JSON <xref target="RFC8259"/>.
	</t>

	<t hangText="object:">
	a data structure as defined by JSON <xref target="RFC8259"/>.
	<vspace blankLines="0"/>
	</t>

	<t hangText="object class:">
	the definition of members that may be found in JSON
	objects described in this document.
	</t>

	<t hangText="object instance:">
	an instantiation or specific instance of an object
	class.
	</t>

	<t hangText="RDAP:">
	Registration Data Access Protocol
	<vspace blankLines="0"/>
	</t>

	<t hangText="RIR:">
	Regional Internet Registry
	<vspace blankLines="0"/>
	</t>

	</list>
	</t>

	</section>

	<section title="Data Model" anchor="sect-1.2"><t>
   The data model for JSON responses is specified in five sections:</t>

	<t><list style="numbers"><t>simple data types conveyed in JSON strings</t>

	<t>data structures specified as JSON arrays or objects that are used
       repeatedly when building up larger objects</t>

	<t>object classes representing structured data corresponding to a
       lookup of a single object</t>

	<t>arrays of objects representing structured data corresponding to a
       search for multiple objects</t>

	<t>the response to an error</t>

	</list>
	</t>

	<t>
   The object classes represent responses for two major categories of
   data: responses returned by RIRs for registration data related to IP
   addresses, reverse DNS names, and Autonomous System numbers and
   responses returned by DNRs for registration data related to forward
   DNS names.  The following object classes are returned by both RIRs
   and DNRs:</t>

	<t><list style="numbers"><t>domains</t>

	<t>nameservers</t>

	<t>entities</t>

	</list>
	</t>

	<t>
   The information served by both RIRs and DNRs for these object classes
   overlap extensively and are given in this document as a unified model
   for both classes of service.</t>

	<t>
   In addition to the object classes listed above, RIRs also serve the
   following object classes:</t>

	<t><list style="numbers"><t>IP networks</t>

	<t>Autonomous System numbers</t>

	</list>
	</t>

	<t>
   Object classes defined in this document represent a minimal set of
   what a compliant client/server needs to understand to function
   correctly; however, some deployments may want to include additional
   object classes to suit individual needs.  Anticipating this need for
   extension, Section 2.1 of this document defines a mechanism for
   extending the JSON objects that are described in this document.</t>

	<t>
   Positive responses take two forms.  A response to a lookup of a
   single object in the registration system yields a JSON object, which
   is the subject of the lookup.  A response to a search for multiple
   objects yields a JSON object that contains an array of JSON objects
   that are the subject of the search.  In each type of response, other
   data structures are present within the topmost JSON object.</t>

	</section>

	</section>

	<section title="Use of JSON" anchor="sect-2"><section title="Naming" anchor="sect-2.1"><t>
   Clients of these JSON responses SHOULD ignore unrecognized JSON
   members in responses.  Servers can insert members into the JSON
   responses, which are not specified in this document, but that does
   not constitute an error in the response.  Servers that insert such
   unspecified members into JSON responses SHOULD have member names
   prefixed with a short identifier followed by an underscore followed
   by a meaningful name.  It has been observed that these short
   identifiers aid software implementers with identifying the
   specification of the JSON member, and failure to use one could cause
   an implementer to assume the server is erroneously using a name from
   this specification.  This allowance does not apply to jCard <xref target="RFC7095"/>
   objects.  The full JSON name (the prefix plus the underscore plus the
   meaningful name) SHOULD adhere to the character and name limitations
   of the prefix registry described in <xref target="RFC7480"/>.  Failure to use these
   limitations could result in slower adoption as these limitations have
   been observed to aid some client programming models.</t>

	<t>
   Consider the following JSON response with JSON members, all of which
   are specified in this document.</t>

	<figure anchor="ure-1"><artwork><![CDATA[
{
  "handle" : "ABC123",
  "remarks" :
  [
    {
      "description" :
      [
        "She sells sea shells down by the sea shore.",
        "Originally written by Terry Sullivan."
      ]
    }
  ]
}
]]></artwork>
	</figure>
	<t>
   If The Registry of the Moon desires to express information not found
   in this specification, it might select "lunarNic" as its identifying
   prefix and insert, as an example, the member named
   "lunarNic_beforeOneSmallStep" to signify registrations occurring
   before the first moon landing and the member named
   "lunarNic_harshMistressNotes" that contains other descriptive text.</t>

	<t>
   Consider the following JSON response with JSON names, some of which
   should be ignored by clients without knowledge of their meaning.</t>

	<figure anchor="ure-2"><artwork><![CDATA[
{
  "handle" : "ABC123",
  "lunarNic_beforeOneSmallStep" : "TRUE THAT!",
  "remarks" :
  [
    {
      "description" :
      [
        "She sells sea shells down by the sea shore.",
        "Originally written by Terry Sullivan."
      ]
    }
  ],
  "lunarNic_harshMistressNotes" :
  [
    "In space,",
    "nobody can hear you scream."
  ]
}
]]></artwork>
	</figure>
	<t>
   Insertion of unrecognized members ignored by clients may also be used
   for future revisions to this specification.</t>

	<t>
   Clients processing JSON responses need to be prepared for members
   representing registration data specified in this document to be
   absent from a response.  In other words, servers are free to not
   include JSON members containing registration data based on their own
   policies.</t>

	<t>
   Finally, all JSON names specified in this document are case
   sensitive.  Both servers and clients MUST transmit and process them
   using the specified character case.</t>

	</section>

	</section>

	<section title="Common Data Types" anchor="sect-3"><t>
   JSON <xref target="RFC8259"/> defines the data types of a number, character string,
   boolean, array, object, and null.  This section describes the
   semantics and/or syntax reference for common, JSON character strings
   used in this document.</t>

	<t><list style="hanging" hangIndent="18"><t hangText="handle:">
	DNRs and RIRs have registry-unique identifiers that
	may be used to specifically reference an object
	instance.  The semantics of this data type as found
	in this document are to be a registry-unique
	reference to the closest enclosing object where the
	value is found.  The data type names "registryId",
	"roid", "nic-handle", "registrationNo", etc., are
	terms often synonymous with this data type.  In
	this document, the term "handle" is used.  The term
	exposed to users by clients is a presentation issue
	beyond the scope of this document. This value is a 
        simple string.
	</t>

	<t hangText="IPv4 addresses:">
	The representation of IPv4 addresses in this
	<vspace blankLines="0"/>
	document uses the dotted-decimal notation.  An
                     example of this textual representation is
                     "192.0.2.0".
	</t>

	<t hangText="IPv6 addresses:">
	The representation of IPv6 addresses in this
	<vspace blankLines="0"/>
	document follow the forms outlined in <xref target="RFC5952"/>.
                     An example of this textual representation is
                     "2001:db8::1:0:0:1".
	</t>

	<t hangText="country codes:">
	Where the identity of a geopolitical nation or
	<vspace blankLines="0"/>
	country is needed, these identities are represented
                     with the alpha-2 or two-character country code
                     designation as defined in <xref target="ISO.3166.1988"/>.  The
                     alpha-2 representation is used because it is freely
                     available, whereas the alpha-3 and numeric-3
                     standards are not.
	</t>

	<t hangText="LDH names:">
	Textual representations of DNS names where the
	<vspace blankLines="0"/>
	labels of the domain are all "letters, digits, hyphen" labels as described by <xref target="RFC5890"/>.  Trailing
                     periods are optional.
	</t>

	<t hangText="Unicode names:">
	Textual representations of DNS names where one or
	<vspace blankLines="0"/>
	more of the labels are U-labels as described by
                     <xref target="RFC5890"/>.  Trailing periods are optional.
	</t>

	<t hangText="dates and times:">
	The syntax for values denoting dates and times is
	<vspace blankLines="0"/>
	defined in <xref target="RFC3339"/>.
	</t>

	<t hangText="URIs:">
	The syntax for values denoting a Uniform Resource
	<vspace blankLines="0"/>
	Identifier (URI) is defined by <xref target="RFC3986"/>.
	</t>

	</list>
	</t>

	<t>
   Contact information is defined using jCards as described in
   <xref target="RFC7095"/>.</t>

	</section>

	<section title="Common Data Structures" anchor="sect-4"><t>
   This section defines common data structures used in responses and
   object classes.</t>

	<section title="RDAP Conformance" anchor="sect-4.1"><t>
   The data structure named "rdapConformance" is an array of strings,
   each providing a hint as to the specifications used in the
   construction of the response.  This data structure appears only in
   the topmost JSON object of a response.</t>

	<t>
   An example rdapConformance data structure:</t>

	<figure anchor="ure-3"><artwork><![CDATA[
"rdapConformance" :
[
  "rdap_level_0"
]
]]></artwork>
	</figure>
	<t>
   The string literal "rdap_level_0" signifies conformance with this
   specification.  When custom JSON values are inserted into responses,
   conformance to those custom specifications MUST be indicated by including
   a unique string literal value registered in the IANA RDAP Extensions
   registry specified in <xref target="RFC7480"/>.  For example, if the fictional
   Registry of the Moon wants to signify that their JSON responses are
   conformant with their registered extensions, the string used might be
   "lunarNIC_level_0".  These registered values aid the identification of
   specifications for software implementers, and failure to use them
   could result in slower adoption of extensions.</t>

	<t>
   Example rdapConformance structure with custom extensions noted:</t>

	<figure anchor="ure-4"><artwork><![CDATA[
"rdapConformance" :
[
  "rdap_level_0",
  "lunarNIC_level_0"
]
]]></artwork>
	</figure>
	</section>

	<section title="Links" anchor="sect-4.2"><t>
   The "links" array is found in data structures to signify links to
   other resources on the Internet.  The relationship of these links is
   defined by the IANA registry described by <xref target="RFC8288"/>.</t>

	<t><list style="hanging" hangIndent="1"><t hangText="The following is an example of the link structure:">
	<vspace blankLines="0"/>
	</t>

	</list>
	</t>

	<figure anchor="ure-5"><artwork><![CDATA[
    {
      "value" : "https://example.com/context_uri",
      "rel" : "self",
      "href" : "https://example.com/target_uri",
      "hreflang" : [ "en", "ch" ],
      "title" : "title",
      "media" : "screen",
      "type" : "application/json"
    }
]]></artwork>
	</figure>
	<t>
   The JSON name/values of "rel", "href", "hreflang", "title", "media",
   and "type" correspond to values found in Section 3 of <xref target="RFC8288"/>.  The
   "value" JSON value is the context URI as described by <xref target="RFC8288"/>.  The
   "value", "rel" and "href" JSON values MUST be specified.  All other JSON values are
   OPTIONAL.</t>

	<t>
   This is an example of the "links" array as it might be found in an
   object class:</t>

	<figure anchor="ure-6"><artwork><![CDATA[
    "links" :
    [
        {
          "value" : "https://example.com/ip/2001:db8::123",
          "rel" : "self",
          "href" : "https://example.com/ip/2001:db8::123",
          "type" : "application/rdap+json"
        },
        {
          "value" : "https://example.com/ip/2001:db8::123",
          "rel" : "up",
          "href" : "https://example.com/ip/2001:db8::/48",
          "type" : "application/rdap+json"
        }

    ]
]]></artwork>
	</figure>
	</section>

	<section title="Notices and Remarks" anchor="sect-4.3"><t>
   The "notices" and "remarks" data structures take the same form.  The
   notices structure denotes information about the service providing
   RDAP information and/or information about the entire response,
   whereas the remarks structure denotes information about the object
   class that contains it (see <xref target="sect-5"/> regarding object classes).</t>
   
   <t>Both are arrays of objects.  Each object contains a "title" string
   representing the title of the object, a "type" string denoting a
   registered type of remark or notice (see <xref target="sect-10.2.1"/>), an
   array of strings named "description" for the purposes of conveying any
   descriptive text, and a "links" array as described in <xref target="sect-4.2"/>. The
   "description" array MUST be included. All other JSON values are OPTIONAL.</t>

	<t>
   An example of the notices data structure:</t>

	<figure anchor="ure-7"><artwork><![CDATA[
"notices" :
[
  {
    "title" : "Terms of Use",
    "description" :
    [
      "Service subject to The Registry of the Moon's TOS.",
      "Copyright (c) 2020 LunarNIC"
    ],
    "links" :
    [
      {
        "value" : "https://example.net/entity/XXXX",
        "rel" : "alternate",
        "type" : "text/html",
        "href" : "https://www.example.com/terms_of_use.html"
      }
    ]
  }
]
]]></artwork>
	</figure>
	<t>
   It is the job of the clients to determine line breaks, spacing, and
   display issues for sentences within the character strings of the
   "description" array.  Each string in the "description" array contains
   a single complete division of human-readable text indicating to
   clients where there are semantic breaks.</t>

	<t>
   An example of the remarks data structure:</t>

	<figure anchor="ure-8"><artwork><![CDATA[
"remarks" :
[
  {
    "description" :
    [
      "She sells sea shells down by the sea shore.",
      "Originally written by Terry Sullivan."
    ]
  }
]
]]></artwork>
	</figure>
	<t>
   Note that objects in the "remarks" array may also have a "links"
   array.</t>

	<t>
   While the "title" and "description" fields are intended primarily for
   human consumption, the "type" string contains a well-known value to
   be registered with IANA (see <xref target="sect-10.2.1"/>) for programmatic use.</t>

	<t>
   An example of the remarks data structure:</t>

	<figure anchor="ure-9"><artwork><![CDATA[
"remarks" :
[
  {
    "type" : "object truncated due to authorization",
    "description" :
    [
      "Some registration data may not have been given.",
      "Use proper authorization credentials to see all of it."
    ]
  }
]
]]></artwork>
	</figure>
	<t>
   While the "remarks" array will appear in many object classes in a
   response, the "notices" array appears only in the topmost object of a
   response.</t>

	</section>

	<section title="Language Identifier" anchor="sect-4.4"><t>
   This data structure consists solely of a name/value pair, where the
   name is "lang" and the value is a string containing a language
   identifier as described in <xref target="RFC5646"/>.</t>

	<t><figure anchor="ure-10"><artwork>"lang" : "mn-Cyrl-MN"</artwork></figure>
	</t>

	<t>
   The "lang" attribute may appear anywhere in an object class or data
   structure except for in jCard objects.</t>

	</section>

	<section title="Events" anchor="sect-4.5"><t>
   This data structure represents events that have occurred on an
   instance of an object class (see <xref target="sect-5"/> regarding object classes).</t>

	<t>
   This is an example of an "events" array.</t>

	<figure anchor="ure-11"><artwork><![CDATA[
"events" :
[
  {
    "eventAction" : "registration",
    "eventActor" : "SOMEID-LUNARNIC",
    "eventDate" : "1990-12-31T23:59:59Z"
  },
  {
    "eventAction" : "last changed",
    "eventActor" : "OTHERID-LUNARNIC",
    "eventDate" : "1991-12-31T23:59:59Z"
  }
]
]]></artwork>
	</figure>
	<t>
   The "events" array consists of objects, each with the following members:</t>

	<t><list style="symbols"><t>"eventAction" -- a REQUIRED string denoting the reason for the event</t>

	<t>"eventActor" -- an OPTIONAL identifier denoting the actor
      responsible for the event</t>

	<t>"eventDate" -- a REQUIRED string containing the time and date the event
      occurred.</t>

	<t>"links" -- OPTIONAL; see <xref target="sect-4.2"/>
	</t>

	</list>
	</t>

	<t>
   Events can be future dated.  One use case for future dating of events
   is to denote when an object expires from a registry.</t>

	<t>
   The "links" array in this data structure is provided for references
   to the event actor.  In order to reference an RDAP entity, a "rel" of
   "related" and a "type" of "application/rdap+json" is used in the link
   reference.</t>

	<t>
   See <xref target="sect-10.2.3"/> for a list of values for the "eventAction" string.
   See Appendix B regarding the various ways events can be modeled.</t>

	</section>

	<section title="Status" anchor="sect-4.6"><t>
   This data structure, named "status", is an array of strings
   indicating the state of a registered object (see <xref target="sect-10.2.2"/> for a
   list of values).</t>

	</section>

	<section title="Port 43 WHOIS Server" anchor="sect-4.7"><t>
   This data structure, a member named "port43", is a simple string
   containing the fully qualified host name or IP address of the WHOIS
   <xref target="RFC3912"/> server where the containing object instance may be found.
   Note that this is not a URI, as there is no WHOIS URI scheme.</t>

	</section>

	<section title="Public IDs" anchor="sect-4.8"><t>
   This data structure maps a public identifier to an object class.  It
   is named "publicIds" and is an array of objects, with each object
   containing the following REQUIRED members:</t>

	<t><list style="symbols"><t>type -- a string denoting the type of public identifier</t>

	<t>identifier -- a string denoting a public identifier of the type related to "type"</t>

	</list>
	</t>

	<t>
   The following is an example of a publicIds structure.</t>

	<figure anchor="ure-12"><artwork><![CDATA[
"publicIds":
[
  {
    "type":"IANA Registrar ID",
    "identifier":"1"
  }
]
]]></artwork>
	</figure>
	</section>

	<section title="Object Class Name" anchor="sect-4.9"><t>
   This data structure, a member named "objectClassName", gives the
   object class name of a particular object as a string.  This
   identifies the type of object being processed.  An objectClassName is
   REQUIRED in all RDAP response objects so that the type of the object
   can be interpreted.</t>

	</section>

	<section title="An Example" anchor="sect-4.10"><t>
   This is an example response with both rdapConformance and notices
   embedded:</t>

	<figure anchor="ure-13"><artwork><![CDATA[
{
  "rdapConformance" :
  [
    "rdap_level_0"
  ],
  "notices" :
  [
    {
      "title" : "Content Removed",
      "description" :
      [
        "Without full authorization, content has been removed.",
        "Sorry, dude!"
      ],
      "links" :
      [
        {
          "value" : "https://example.net/ip/192.0.2.0/24",
          "rel" : "alternate",
          "type" : "text/html",
          "href" : "https://www.example.com/redaction_policy.html"
        }
      ]
    }
  ],
  "lang" : "en",
  "objectClassName" : "ip network",
  "startAddress" : "192.0.2.0",
  "endAddress" : "192.0.2.255",
  "handle" : "XXXX-RIR",
  "ipVersion" : "v4",
  "name": "NET-RTR-1",
  "parentHandle" : "YYYY-RIR",
  "remarks" :
  [

    {
      "description" :
      [
        "She sells sea shells down by the sea shore.",
        "Originally written by Terry Sullivan."
      ]
    }
  ]
}
]]></artwork>
	</figure>
	</section>

	</section>

	<section title="Object Classes" anchor="sect-5"><t>
   Object classes represent structures appropriate for a response from
   the queries specified in <xref target="I-D.ietf-regext-rfc7482bis"/>.</t>

	<t>
   Each object class contains a "links" array as specified in
   <xref target="sect-4.2"/>.  For every object class instance in a response, whether
   the object class instance is directly representing the response to a
   query or is embedded in other object class instances or is an item in
   a search result set, servers SHOULD provide a link representing a URI
   for that object class instance using the "self" relationship as
   described in the IANA registry specified by <xref target="RFC8288"/>.  As explained
   in <xref target="sect-5.2"/>, this may be not always be possible for nameserver
   data.  Clients MUST be able to process object instances without a
   self link.  When present, clients can use the self link for caching
   data.  Servers MAY provide more than one self link for any given
   object instance.  Failure to provide any self link by a server may
   result in clients being unable to cache object class instances.</t>

	<t>
   Clients using self links for caching SHOULD NOT cache any object
   class instances where the authority of the self link is different
   than the authority of the server returning the data.  Failing to do
   so might result in cache poisoning.</t>

	<t>
   Self links MUST contain a "type" element containing the "application/rdap+json" media type when referencing RDAP object instances as
   defined by this document.</t>

	<t>
   This is an example of the "links" array with a self link to an object
   class:</t>

	<figure anchor="ure-14"><artwork><![CDATA[
    "links" :
    [
        {
          "value" : "https://example.com/ip/2001:db8::123",
          "rel" : "self",
          "href" : "https://example.com/ip/2001:db8::123",
          "type" : "application/rdap+json"
        }
    ]
]]></artwork>
	</figure>
	<section title="The Entity Object Class" anchor="sect-5.1"><t>
   The entity object class appears throughout this document and is an
   appropriate response for the /entity/XXXX query defined in
   "Registration Data Access Protocol (RDAP) Query Format" <xref target="I-D.ietf-regext-rfc7482bis"/>.
   This object class represents the information of organizations,
   corporations, governments, non-profits, clubs, individual persons,
   and informal groups of people.  All of these representations are so
   similar that it is best to represent them in JSON <xref target="RFC8259"/> with one
   construct, the entity object class, to aid in the reuse of code by
   implementers.</t>

	<t>
   The entity object class uses jCard <xref target="RFC7095"/> to represent contact
   information, such as postal addresses, email addresses, phone numbers
   and names of organizations and individuals.  Many of the types of
   information that can be represented with jCard have no use in RDAP,
   such as birthdays, anniversaries, and gender.</t>

	<t>
   The entity object is served by both RIRs and DNRs.  The following is
   an example of an entity that might be served by an RIR.</t>

	<figure anchor="ure-15"><artwork><![CDATA[
{
  "objectClassName" : "entity",
  "handle":"XXXX",
  "vcardArray":[
    "vcard",
    [
      ["version", {}, "text", "4.0"],
      ["fn", {}, "text", "Joe User"],
      ["n", {}, "text",
        ["User", "Joe", "", "", ["ing. jr", "M.Sc."]]
      ],
      ["kind", {}, "text", "individual"],
      ["lang", {
        "pref":"1"
      }, "language-tag", "fr"],
      ["lang", {
        "pref":"2"
      }, "language-tag", "en"],
      ["org", {
        "type":"work"
      }, "text", "Example"],
      ["title", {}, "text", "Research Scientist"],
      ["role", {}, "text", "Project Lead"],
      ["adr",
        { "type":"work" },
        "text",
        [
          "",
          "Suite 1234",
          "4321 Rue Somewhere",
          "Quebec",
          "QC",
          "G1V 2M2",
          "Canada"
        ]
      ],
      ["adr",
        {
          "type":"home",
          "label":"123 Maple Ave\nSuite 90001\nVancouver\nBC\n1239\n"
        },
        "text",
        [
          "", "", "", "", "", "", ""
        ]
      ],
      ["tel",
        {
          "type":["work", "voice"],
          "pref":"1"
        },
        "uri",
        "tel:+1-555-555-1234;ext=102"
      ],
      ["tel",
        { "type":["work", "cell", "voice", "video", "text"] },
        "uri",
        "tel:+1-555-555-4321"
      ],
      ["email",
        { "type":"work" },
        "text",
        "joe.user@example.com"
      ],
      ["geo", {
        "type":"work"
      }, "uri", "geo:46.772673,-71.282945"],
      ["key",
        { "type":"work" },
        "uri",
        "https://www.example.com/joe.user/joe.asc"
      ],
      ["tz", {},
        "utc-offset", "-05:00"],
      ["url", { "type":"home" },
        "uri", "https://example.org"]
    ]
  ],
  "roles":[ "registrar" ],
  "publicIds":[
    {
      "type":"IANA Registrar ID",
      "identifier":"1"
    }
  ],
  "remarks":[
    {
      "description":[
        "She sells sea shells down by the sea shore.",
        "Originally written by Terry Sullivan."
      ]
    }
  ],
  "links":[
    {
      "value":"https://example.com/entity/XXXX",
      "rel":"self",
      "href":"https://example.com/entity/XXXX",
      "type" : "application/rdap+json"
    }
  ],
  "events":[
    {
      "eventAction":"registration",
      "eventDate":"1990-12-31T23:59:59Z"
    }
  ],
  "asEventActor":[

    {
      "eventAction":"last changed",
      "eventDate":"1991-12-31T23:59:59Z"
    }
  ]
}
]]></artwork>
	</figure>
	<t>
   The entity object class can contain the following members:</t>

	<t><list style="symbols"><t>objectClassName -- the string "entity"</t>

	<t>handle -- a string representing a registry unique identifier of
      the entity</t>

	<t>vcardArray -- a jCard with the entity's contact information</t>

	<t>roles -- an array of strings, each signifying the relationship an
      object would have with its closest containing object (see
      <xref target="sect-10.2.4"/> for a list of values)</t>

	<t>publicIds -- see <xref target="sect-4.8"/>
	</t>

	<t>entities -- an array of entity objects as defined by this section</t>

	<t>remarks -- see <xref target="sect-4.3"/>
	</t>

	<t>links -- see <xref target="sect-4.2"/>
	</t>

	<t>events -- see <xref target="sect-4.5"/>
	</t>

	<t>asEventActor -- this data structure takes the same form as the
      events data structure (see <xref target="sect-4.5"/>), but each object in the
      array MUST NOT have an "eventActor" member.  These objects denote
      that the entity is an event actor for the given events.  See
      Appendix B regarding the various ways events can be modeled.</t>

	<t>status -- see <xref target="sect-4.6"/>
	</t>

	<t>port43 -- see <xref target="sect-4.7"/>
	</t>

	<t>networks -- an array of IP network objects as defined in
      <xref target="sect-5.4"/>
	</t>

	<t>autnums -- an array of autnum objects as defined in <xref target="sect-5.5"/>
	</t>

	</list>
	</t>

	<t>
   Entities may also have other entities embedded with them in an array.
   This can be used to model an organization with specific individuals
   fulfilling designated roles of responsibility.</t>

	<t>
   The following is an elided example of an entity with embedded
   entities.</t>

	<figure anchor="ure-16"><artwork><![CDATA[
{
  "objectClassName" : "entity",
  "handle" : "ANENTITY",
  "roles" : [ "registrar" ],
  ...
  "entities" :
  [
    {
      "objectClassName" : "entity",
      "handle": "ANEMBEDDEDENTITY",
      "roles" : [ "technical" ],
      ...
    },
    ...
  ],
  ...
}
]]></artwork>
	</figure>
	<t>
   The following is an example of an entity that might be served by a
   DNR.</t>

	<figure anchor="ure-17"><artwork><![CDATA[
{
  "objectClassName" : "entity",
  "handle":"XXXX",
  "vcardArray":[
    "vcard",
    [
      ["version", {}, "text", "4.0"],
      ["fn", {}, "text", "Joe User"],
      ["kind", {}, "text", "individual"],
      ["lang", {
        "pref":"1"
      }, "language-tag", "fr"],
      ["lang", {
        "pref":"2"
      }, "language-tag", "en"],
      ["org", {
        "type":"work"
      }, "text", "Example"],
      ["title", {}, "text", "Research Scientist"],
      ["role", {}, "text", "Project Lead"],
      ["adr",
        { "type":"work" },
        "text",
        [
          "",
          "Suite 1234",
          "4321 Rue Somewhere",
          "Quebec",
          "QC",
          "G1V 2M2",
          "Canada"
        ]
      ],
      ["tel",
        { "type":["work", "voice"], "pref":"1" },
        "uri", "tel:+1-555-555-1234;ext=102"
      ],
      ["email",
        { "type":"work" },
        "text", "joe.user@example.com"
      ]
    ]
  ],
  "status":[ "validated", "locked" ],
  "remarks":[
    {
      "description":[
        "She sells sea shells down by the sea shore.",
        "Originally written by Terry Sullivan."
      ]
    }
  ],
  "links":[
    {
      "value":"https://example.com/entity/XXXX",
      "rel":"self",
      "href":"https://example.com/entity/XXXX",
      "type":"application/rdap+json"
    }
  ],
  "port43":"whois.example.net",
  "events":[
    {
      "eventAction":"registration",
      "eventDate":"1990-12-31T23:59:59Z"
    },
    {
      "eventAction":"last changed",
      "eventDate":"1991-12-31T23:59:59Z",
      "eventActor":"joe@example.com"
    }
  ]
}
]]></artwork>
	</figure>
	<t>
   See Appendix A for use of the entity object class to model various
   types of entities found in both RIRs and DNRs.  See Appendix C
   regarding structured vs.  unstructured postal addresses in entities.</t>

	</section>

	<section title="The Nameserver Object Class" anchor="sect-5.2"><t>
   The nameserver object class represents information regarding DNS
   nameservers used in both forward and reverse DNS.  RIRs and some DNRs
   register or expose nameserver information as an attribute of a domain
   name, while other DNRs model nameservers as "first class objects".</t>

	<t>
   The nameserver object class accommodates both models and degrees of
   variation in between.</t>

	<t><list style="hanging" hangIndent="1"><t hangText="The following is an example of a nameserver object.">
	<vspace blankLines="0"/>
	</t>

	</list>
	</t>

	<figure anchor="ure-18"><artwork><![CDATA[
  {
    "objectClassName" : "nameserver",
    "handle" : "XXXX",
    "ldhName" : "ns1.xn--fo-5ja.example",
    "unicodeName" : "ns.fóo.example",
    "status" : [ "active" ],
    "ipAddresses" :
    {
      "v4": [ "192.0.2.1", "192.0.2.2" ],
      "v6": [ "2001:db8::123" ]
    },
    "remarks" :
    [
      {
        "description" :
        [
          "She sells sea shells down by the sea shore.",
          "Originally written by Terry Sullivan."
        ]
      }
    ],
    "links" :
    [
      {
        "value" : "https://example.net/nameserver/
		  ns1.xn--fo-5ja.example",
        "rel" : "self",
        "href" : "https://example.net/nameserver/
		  ns1.xn--fo-5ja.example",
        "type" : "application/rdap+json"
      }
    ],
    "port43" : "whois.example.net",
    "events" :
    [
      {
        "eventAction" : "registration",
        "eventDate" : "1990-12-31T23:59:59Z"
      },
      {
        "eventAction" : "last changed",
        "eventDate" : "1991-12-31T23:59:59Z",
        "eventActor" : "joe@example.com"
      }
    ]
  }
]]></artwork>
	</figure>
	<t>
   Figure 18 is an example of a nameserver object with all appropriate values given.
   Registries using a first-class nameserver data model would embed this
   in domain objects as well as allowing references to it with the
   "/nameserver" query type (all depending on the registry operators
   policy).  Other registries may pare back the information as needed.
   Figure 19 is an example of a nameserver object as would be found in
   RIRs and some DNRs, while Figure 20 is an example of a nameserver
   object as would be found in other DNRs.</t>

	<t><list style="hanging" hangIndent="1"><t hangText="The following is an example of the simplest nameserver object:">
	<vspace blankLines="0"/>
	</t>

	</list>
	</t>

	<figure anchor="ure-19"><artwork><![CDATA[
  {
    "objectClassName" : "nameserver",
    "ldhName" : "ns1.example.com"
  }
]]></artwork>
	</figure>
	<t>
   The following is an example of a simple nameserver object that might
   be commonly used by DNRs:</t>

	<figure anchor="ure-20"><artwork><![CDATA[
  {
    "objectClassName" : "nameserver",
    "ldhName" : "ns1.example.com",
    "ipAddresses" : { "v6" : [ "2001:db8::123", "2001:db8::124" ] }
  }
]]></artwork>
	</figure>
	<t>
   As nameservers can be modeled by some registries to be first-class
   objects, they may also have an array of entities (<xref target="sect-5.1"/>)
   embedded to signify parties responsible for the maintenance,
   registrations, etc., of the nameservers.</t>

	<t>
   The following is an elided example of a nameserver with embedded
   entities.</t>

	<figure anchor="ure-21"><artwork><![CDATA[
{
  "objectClassName" : "nameserver",
  "handle" : "XXXX",
  "ldhName" : "ns.xn--fo-5ja.example",
  ...
  "entities" :
  [
    ...
  ],
  ...
}
]]></artwork>
	</figure>
	<t>
   The nameserver object class can contain the following members:</t>

	<t><list style="symbols"><t>objectClassName -- the string "nameserver"</t>

	<t>handle -- a string representing a registry unique identifier of
      the nameserver</t>

	<t>ldhName -- a string containing the LDH name of the nameserver (see
      <xref target="sect-3"/>)</t>

	<t>unicodeName -- a string containing a DNS Unicode name of the
      nameserver (see <xref target="sect-3"/>)</t>

	<t>ipAddresses -- an object containing the following members:<list style="symbols"><t>v6 -- an array of strings containing IPv6 addresses of the
         nameserver</t>

	<t>v4 -- an array of strings containing IPv4 addresses of the
         nameserver</t>

	</list>
	</t>

	<t>entities -- an array of entity objects as defined by <xref target="sect-5.1"/>
	</t>

	<t>status -- see <xref target="sect-4.6"/>
	</t>

	<t>remarks -- see <xref target="sect-4.3"/>
	</t>

	<t>links -- see <xref target="sect-4.2"/>
	</t>

	<t>port43 -- see <xref target="sect-4.7"/>
	</t>

	<t>events -- see <xref target="sect-4.5"/>
	</t>

	</list>
	</t>

	</section>

	<section title="The Domain Object Class" anchor="sect-5.3"><t>
   The domain object class represents a DNS name and point of
   delegation.  For RIRs, these delegation points are in the reverse DNS
   tree, whereas for DNRs, these delegation points are in the forward
   DNS tree.</t>

	<t>
   In both cases, the high-level structure of the domain object class
   consists of information about the domain registration, nameserver
   information related to the domain name, and entities related to the
   domain name (e.g., registrant information, contacts, etc.).</t>

	<t>
   The following is an elided example of the domain object showing the
   high-level structure:</t>

	<figure anchor="ure-22"><artwork><![CDATA[
{
  "objectClassName" : "domain",
  "handle" : "XXX",
  "ldhName" : "blah.example.com",
  ...
  "nameservers" :
  [
    ...
  ],
  ...
  "entities" :
  [
    ...
  ]
}
]]></artwork>
	</figure>
	<t>
   The domain object class can contain the following members:</t>

	<t><!--
   rfc7483.xml.txt(1543): Warning: Found unexpected inentation change: worked on '
   +  links -  see Section 4.2', found '      See Appendix D for background
   information on these objects.'
   --><list style="symbols"><t>objectClassName -- the string "domain"</t>

	<t>handle -- a string representing a registry unique identifier of
      the domain object instance</t>

	<t>ldhName -- a string describing a domain name in LDH form as
      described in <xref target="sect-3"/>
	</t>

	<t>unicodeName -- a string containing a domain name with U-labels as
      described in <xref target="sect-3"/>
	</t>

	<t>variants -- an array of objects, each containing the following
      values:<list style="symbols"><t>relation -- an array of strings, with each string denoting the
         relationship between the variants and the containing domain
         object (see <xref target="sect-10.2.5"/> for a list of suggested variant
         relations).</t>

	<t>idnTable -- the name of the Internationalized Domain Name (IDN)
         table of codepoints, such as one listed with the IANA (see IDN
         tables <xref target="IANA_IDNTABLES"/>).</t>

	<t>variantNames -- an array of objects, with each object
         containing an "ldhName" member and a "unicodeName" member (see
         <xref target="sect-3"/>).</t>

	</list>
	</t>

	<t>nameservers -- an array of nameserver objects as defined by
      <xref target="sect-5.2"/>
	</t>

	<t>secureDNS -- an object with the following members:<list style="symbols"><t>zoneSigned -- boolean true if the zone has been signed, false
         otherwise.</t>

	<t>delegationSigned -- boolean true if there are DS records in the
         parent, false otherwise.</t>

	<t>maxSigLife -- an integer representing the signature lifetime in
         seconds to be used when creating the RRSIG DS record in the
         parent zone <xref target="RFC5910"/>.</t>

	<t>dsData -- an array of objects, each with the following members:<list style="symbols"><t>keyTag -- an integer as specified by the key tag field of a
            DNS DS record as specified by <xref target="RFC4034"/> in presentation
            format</t>

	<t>algorithm -- an integer as specified by the algorithm field
            of a DNS DS record as described by RFC 4034 in presentation
            format</t>

	<t>digest -- a string as specified by the digest field of a DNS
            DS record as specified by RFC 4034 in presentation format</t>

	<t>digestType -- an integer as specified by the digest type
            field of a DNS DS record as specified by RFC 4034 in
            presentation format</t>

	<t>events -- see <xref target="sect-4.5"/>
	</t>

	<t>links -- see <xref target="sect-4.2"/>
	</t>

	</list>
	</t>

	<t>keyData -- an array of objects, each with the following
         members:<list style="symbols"><t>flags -- an integer representing the flags field value in
            the DNSKEY record <xref target="RFC4034"/> in presentation format</t>

	<t>protocol -- an integer representation of the protocol field
            value of the DNSKEY record <xref target="RFC4034"/> in presentation format</t>

	<t>publicKey -- a string representation of the public key in
            the DNSKEY record <xref target="RFC4034"/> in presentation format</t>

	<t>algorithm -- an integer as specified by the algorithm field
            of a DNSKEY record as specified by <xref target="RFC4034"/> in presentation
            format</t>

	<t>events -- see <xref target="sect-4.5"/>
	</t>

	<t>links -- see <xref target="sect-4.2"/>
	<list style="hanging" hangIndent="1"><t hangText="See Appendix D for background information on these objects.">
	<vspace blankLines="0"/>
	</t>

	</list>
	</t>

	</list>
	</t>

	</list>
	</t>

	<t>entities -- an array of entity objects as defined by <xref target="sect-5.1"/>
	</t>

	<t>status -- see <xref target="sect-4.6"/>
	</t>

	<t>publicIds -- see <xref target="sect-4.8"/>
	</t>

	<t>remarks -- see <xref target="sect-4.3"/>
	</t>

	<t>links -- see <xref target="sect-4.2"/>
	</t>

	<t>port43 -- see <xref target="sect-4.7"/>
	</t>

	<t>events -- see <xref target="sect-4.5"/>
	</t>

	<t>network -- represents the IP network for which a reverse DNS
      domain is referenced.  See <xref target="sect-5.4"/>
	</t>

	</list>
	</t>

	<t>
   The following is an example of a JSON domain object representing a
   reverse DNS delegation point that might be served by an RIR.</t>

	<figure anchor="ure-23"><artwork><![CDATA[
{
  "objectClassName" : "domain",
  "handle" : "XXXX",
  "ldhName" : "0.2.192.in-addr.arpa",
  "nameservers" :
  [
    {
      "objectClassName" : "nameserver",
      "ldhName" : "ns1.rir.example"
    },
    {
      "objectClassName" : "nameserver",
      "ldhName" : "ns2.rir.example"
    }
  ],
  "secureDNS":
  {
    "delegationSigned": true,
    "dsData":
    [
      {
        "keyTag": 12345,
        "algorithm": 3,
        "digestType": 1,
        "digest": "49FD46E6C4B45C55D4AC"
      }
    ]
  },
  "remarks" :
  [
    {
      "description" :
      [
        "She sells sea shells down by the sea shore.",
        "Originally written by Terry Sullivan."
      ]
    }
  ],
  "links" :
  [
    {
      "value": "https://example.net/domain/0.2.192.in-addr.arpa",
      "rel" : "self",
      "href" : "https://example.net/domain/0.2.192.in-addr.arpa",
      "type" : "application/rdap+json"

    }
  ],
  "events" :
  [
    {
      "eventAction" : "registration",
      "eventDate" : "1990-12-31T23:59:59Z"
    },
    {
      "eventAction" : "last changed",
      "eventDate" : "1991-12-31T23:59:59Z",
      "eventActor" : "joe@example.com"
    }
  ],
  "entities" :
  [
    {
      "objectClassName" : "entity",
      "handle" : "XXXX",
      "vcardArray":[
        "vcard",
        [
          ["version", {}, "text", "4.0"],
          ["fn", {}, "text", "Joe User"],
          ["kind", {}, "text", "individual"],
          ["lang", {
            "pref":"1"
          }, "language-tag", "fr"],
          ["lang", {
            "pref":"2"
          }, "language-tag", "en"],
          ["org", {
            "type":"work"
          }, "text", "Example"],
          ["title", {}, "text", "Research Scientist"],
          ["role", {}, "text", "Project Lead"],
          ["adr",
            { "type":"work" },
            "text",
            [
              "",
              "Suite 1234",
              "4321 Rue Somewhere",
              "Quebec",
              "QC",
              "G1V 2M2",
              "Canada"
            ]

          ],
          ["tel",
            { "type":["work", "voice"], "pref":"1" },
            "uri", "tel:+1-555-555-1234;ext=102"
          ],
          ["email",
            { "type":"work" },
            "text", "joe.user@example.com"
          ]
        ]
      ],
      "roles" : [ "registrant" ],
      "remarks" :
      [
        {
          "description" :
          [
            "She sells sea shells down by the sea shore.",
            "Originally written by Terry Sullivan."
          ]
        }
      ],
      "links" :
      [
        {
          "value": "https://example.net/entity/XXXX",
          "rel" : "self",
          "href" : "https://example.net/entity/XXXX",
          "type" : "application/rdap+json"
        }
      ],
      "events" :
      [
        {
          "eventAction" : "registration",
          "eventDate" : "1990-12-31T23:59:59Z"
        },
        {
          "eventAction" : "last changed",
          "eventDate" : "1991-12-31T23:59:59Z",
          "eventActor" : "joe@example.com"
        }
      ]
    }
  ],
  "network" :
  {
    "objectClassName" : "ip network",
    "handle" : "XXXX-RIR",
    "startAddress" : "192.0.2.0",
    "endAddress" : "192.0.2.255",
    "ipVersion" : "v4",
    "name": "NET-RTR-1",
    "type" : "DIRECT ALLOCATION",
    "country" : "AU",
    "parentHandle" : "YYYY-RIR",
    "status" : [ "active" ]
  }
}
]]></artwork>
	</figure>
	<t>
   The following is an example of a JSON domain object representing a
   forward DNS delegation point that might be served by a DNR.</t>

	<figure anchor="ure-24"><artwork><![CDATA[
{
  "objectClassName" : "domain",
  "handle" : "XXXX",
  "ldhName" : "xn--fo-5ja.example",
  "unicodeName" : "fóo.example",
  "variants" :
  [
    {
      "relation" : [ "registered", "conjoined" ],
      "variantNames" :
      [
        {
          "ldhName" : "xn--fo-cka.example",
          "unicodeName" : "fõo.example"
        },
        {
          "ldhName" : "xn--fo-fka.example",
          "unicodeName" : "föo.example"
        }
      ]
    },
    {
      "relation" : [ "unregistered", "registration restricted" ],
      "idnTable": ".EXAMPLE Swedish",
      "variantNames" :
      [
        {
          "ldhName": "xn--fo-8ja.example",
          "unicodeName" : "fôo.example"
        }
      ]

    }
  ],
  "status" : [ "locked", "transfer prohibited" ],
  "publicIds":[
    {
      "type":"ENS_Auth ID",
      "identifier":"1234567890"
    }
  ],
  "nameservers" :
  [
    {
      "objectClassName" : "nameserver",
      "handle" : "XXXX",
      "ldhName" : "ns1.example.com",
      "status" : [ "active" ],
      "ipAddresses" :
      {
        "v6": [ "2001:db8::123", "2001:db8::124" ],
        "v4": [ "192.0.2.1", "192.0.2.2" ]
      },
      "remarks" :
      [
        {
          "description" :
          [
            "She sells sea shells down by the sea shore.",
            "Originally written by Terry Sullivan."
          ]
        }
      ],
      "links" :
      [
        {
          "value" : "https://example.net/nameserver/ns1.example.com",
          "rel" : "self",
          "href" : "https://example.net/nameserver/ns1.example.com",
          "type" : "application/rdap+json"
        }
      ],
      "events" :
      [
        {
          "eventAction" : "registration",
          "eventDate" : "1990-12-31T23:59:59Z"
        },
        {
          "eventAction" : "last changed",
          "eventDate" : "1991-12-31T23:59:59Z"
        }
      ]
    },
    {
      "objectClassName" : "nameserver",
      "handle" : "XXXX",
      "ldhName" : "ns2.example.com",
      "status" : [ "active" ],
      "ipAddresses" :
      {
        "v6" : [ "2001:db8::125", "2001:db8::126" ],
        "v4" : [ "192.0.2.3", "192.0.2.4" ]
      },
      "remarks" :
      [
        {
          "description" :
          [
            "She sells sea shells down by the sea shore.",
            "Originally written by Terry Sullivan."
          ]
        }
      ],
      "links" :
      [
        {
          "value" : "https://example.net/nameserver/ns2.example.com",
          "rel" : "self",
          "href" : "https://example.net/nameserver/ns2.example.com",
          "type" : "application/rdap+json"
        }
      ],
      "events" :
      [
        {
          "eventAction" : "registration",
          "eventDate" : "1990-12-31T23:59:59Z"
        },
        {
          "eventAction" : "last changed",
          "eventDate" : "1991-12-31T23:59:59Z"
        }
      ]
    }
  ],
  "secureDNS":
  {

     "zoneSigned": true,
     "delegationSigned": true,
     "maxSigLife": 604800,
     "keyData":
     [
       {
         "flags": 257,
         "protocol": 3,
         "algorithm": 1,
         "publicKey": "AQPJ////4Q==",
         "events":
         [
           {
             "eventAction": "last changed",
             "eventDate": "2012-07-23T05:15:47Z"
           }
         ]
       }
     ]
  },
  "remarks" :
  [
    {
      "description" :
      [
        "She sells sea shells down by the sea shore.",
        "Originally written by Terry Sullivan."
      ]
    }
  ],
  "links" :
  [
    {
      "value": "https://example.net/domain/xn--fo-5ja.example",
      "rel" : "self",
      "href" : "https://example.net/domain/xn--fo-5ja.example",
      "type" : "application/rdap+json"
    }
  ],
  "port43" : "whois.example.net",
  "events" :
  [
    {
      "eventAction" : "registration",
      "eventDate" : "1990-12-31T23:59:59Z"
    },
    {
      "eventAction" : "last changed",
      "eventDate" : "1991-12-31T23:59:59Z",
      "eventActor" : "joe@example.com"
    },
    {
      "eventAction" : "transfer",
      "eventDate" : "1991-12-31T23:59:59Z",
      "eventActor" : "joe@example.com"
    },
    {
      "eventAction" : "expiration",
      "eventDate" : "2016-12-31T23:59:59Z",
      "eventActor" : "joe@example.com"
    }
  ],
  "entities" :
  [
    {
      "objectClassName" : "entity",
      "handle" : "XXXX",
      "vcardArray":[
        "vcard",
        [
          ["version", {}, "text", "4.0"],
          ["fn", {}, "text", "Joe User"],
          ["kind", {}, "text", "individual"],
          ["lang", {
            "pref":"1"
          }, "language-tag", "fr"],
          ["lang", {
            "pref":"2"
          }, "language-tag", "en"],
          ["org", {
            "type":"work"
          }, "text", "Example"],
          ["title", {}, "text", "Research Scientist"],
          ["role", {}, "text", "Project Lead"],
          ["adr",
            { "type":"work" },
            "text",
            [
              "",
              "Suite 1234",
              "4321 Rue Somewhere",
              "Quebec",
              "QC",
              "G1V 2M2",
              "Canada"
            ]

          ],
          ["tel",
            { "type":["work", "voice"], "pref":"1" },
            "uri", "tel:+1-555-555-1234;ext=102"
          ],
          ["email",
            { "type":"work" },
            "text", "joe.user@example.com"
          ]
        ]
      ],
      "status" : [ "validated", "locked" ],
      "roles" : [ "registrant" ],
      "remarks" :
      [
        {
          "description" :
          [
            "She sells sea shells down by the sea shore.",
            "Originally written by Terry Sullivan."
          ]
        }
      ],
      "links" :
      [
        {
          "value" : "https://example.net/entity/XXXX",
          "rel" : "self",
          "href" : "https://example.net/entity/XXXX",
          "type" : "application/rdap+json"
        }
      ],
      "events" :
      [
        {
          "eventAction" : "registration",
          "eventDate" : "1990-12-31T23:59:59Z"
        },
        {
          "eventAction" : "last changed",
          "eventDate" : "1991-12-31T23:59:59Z"
        }
      ]
    }
  ]
}
]]></artwork>
	</figure>
	</section>

	<section title="The IP Network Object Class" anchor="sect-5.4"><t>
   The IP network object class models IP network registrations found in
   RIRs and is the expected response for the "/ip" query as defined by
   <xref target="I-D.ietf-regext-rfc7482bis"/>.  There is no equivalent object class for DNRs.  The high-
   level structure of the IP network object class consists of
   information about the network registration and entities related to
   the IP network (e.g., registrant information, contacts, etc.).</t>

	<t>
   The following is an elided example of the IP network object type
   showing the high-level structure:</t>

	<figure anchor="ure-25"><artwork><![CDATA[
{
  "objectClassName" : "ip network",
  "handle" : "XXX",
  ...
  "entities" :
  [
    ...
  ]
}
]]></artwork>
	</figure>
	<t>
   The following is an example of the JSON object for the network
   registration information.</t>

	<figure anchor="ure-26"><artwork><![CDATA[
{
  "objectClassName" : "ip network",
  "handle" : "XXXX-RIR",
  "startAddress" : "2001:db8::",
  "endAddress" : "2001:db8:0:ffff:ffff:ffff:ffff:ffff",
  "ipVersion" : "v6",
  "name": "NET-RTR-1",
  "type" : "DIRECT ALLOCATION",
  "country" : "AU",
  "parentHandle" : "YYYY-RIR",
  "status" : [ "active" ],
  "remarks" :
  [
    {
      "description" :
      [
        "She sells sea shells down by the sea shore.",
        "Originally written by Terry Sullivan."
      ]
    }
  ],
  "links" :
  [
    {
      "value" : "https://example.net/ip/2001:db8::/48",
      "rel" : "self",
      "href" : "https://example.net/ip/2001:db8::/48",
      "type" : "application/rdap+json"
    },
    {
      "value" : "https://example.net/ip/2001:db8::/48",
      "rel" : "up",
      "href" : "https://example.net/ip/2001:c00::/23",
      "type" : "application/rdap+json"
    }
  ],
  "events" :
  [
    {
      "eventAction" : "registration",
      "eventDate" : "1990-12-31T23:59:59Z"
    },
    {
      "eventAction" : "last changed",
      "eventDate" : "1991-12-31T23:59:59Z"
    }
  ],
  "entities" :
  [
    {
      "objectClassName" : "entity",
      "handle" : "XXXX",
      "vcardArray":[
        "vcard",
        [
          ["version", {}, "text", "4.0"],
          ["fn", {}, "text", "Joe User"],
          ["kind", {}, "text", "individual"],
          ["lang", {
            "pref":"1"
          }, "language-tag", "fr"],
          ["lang", {
            "pref":"2"
          }, "language-tag", "en"],
          ["org", {
            "type":"work"
          }, "text", "Example"],
          ["title", {}, "text", "Research Scientist"],
          ["role", {}, "text", "Project Lead"],
          ["adr",
            { "type":"work" },
            "text",
            [
              "",
              "Suite 1234",
              "4321 Rue Somewhere",
              "Quebec",
              "QC",
              "G1V 2M2",
              "Canada"
            ]
          ],
          ["tel",
            { "type":["work", "voice"], "pref":"1" },
            "uri", "tel:+1-555-555-1234;ext=102"
          ],
          ["email",
            { "type":"work" },
            "text", "joe.user@example.com"
          ]
        ]
      ],
      "roles" : [ "registrant" ],
      "remarks" :
      [
        {
          "description" :
          [
            "She sells sea shells down by the sea shore.",
            "Originally written by Terry Sullivan."
          ]
        }
      ],
      "links" :
      [
        {
          "value" : "https://example.net/entity/xxxx",
          "rel" : "self",
          "href" : "https://example.net/entity/xxxx",
          "type" : "application/rdap+json"
        }
      ],
      "events" :
      [
        {
          "eventAction" : "registration",
          "eventDate" : "1990-12-31T23:59:59Z"

        },
        {
          "eventAction" : "last changed",
          "eventDate" : "1991-12-31T23:59:59Z"
        }
      ]
    }
  ]
}
]]></artwork>
	</figure>
	<t>
   The IP network object class can contain the following members:</t>

	<t><list style="symbols"><t>objectClassName -- the string "ip network"</t>

	<t>handle -- a string representing the RIR-unique identifier of the
      network registration</t>

	<t>startAddress -- a string representing the starting IP address of the network, either
      IPv4 or IPv6</t>

	<t>endAddress -- a string representing the ending IP address of the network, either IPv4 or
      IPv6</t>

	<t>ipVersion -- a string signifying the IP protocol version of the
      network: "v4" signifies an IPv4 network, and "v6" signifies an
      IPv6 network</t>

	<t>name -- a string representing an identifier assigned to the network registration by the
      registration holder</t>

	<t>type -- a string containing an RIR-specific classification of the
      network</t>

	<t>country -- a string containing the two-character country code of
      the network</t>

	<t>parentHandle -- a string containing an RIR-unique identifier of
      the parent network of this network registration</t>

	<t>status -- an array of strings indicating the state of the IP
      network as defined by <xref target="sect-4.6"/></t>

	<t>entities -- an array of entity objects as defined by <xref target="sect-5.1"/>
	</t>

	<t>remarks -- see <xref target="sect-4.3"/>
	</t>

	<t>links -- see <xref target="sect-4.2"/>
	</t>

	<t>port43 -- see <xref target="sect-4.7"/>
	</t>

	<t>events -- see <xref target="sect-4.5"/>
	</t>

	</list>
	</t>

	</section>

	<section title="Autonomous System Number Object Class" anchor="sect-5.5"><t>
   The Autonomous System number (autnum) object class models Autonomous
   System number registrations found in RIRs and represents the expected
   response to an "/autnum" query as defined by <xref target="I-D.ietf-regext-rfc7482bis"/>.  There is no
   equivalent object class for DNRs.  The high-level structure of the
   autnum object class consists of information about the network
   registration and entities related to the autnum registration (e.g.,
   registrant information, contacts, etc.) and is similar to the IP
   network object class.</t>

	<t>
   The following is an example of a JSON object representing an autnum.</t>

	<figure anchor="ure-27"><artwork><![CDATA[
{
  "objectClassName" : "autnum",
  "handle" : "XXXX-RIR",
  "startAutnum" : 10,
  "endAutnum" : 15,
  "name": "AS-RTR-1",
  "type" : "DIRECT ALLOCATION",
  "status" : [ "active" ],
  "country": "AU",
  "remarks" :
  [
    {
      "description" :
      [
        "She sells sea shells down by the sea shore.",
        "Originally written by Terry Sullivan."
      ]
    }
  ],
  "links" :
  [
    {
      "value" : "https://example.net/autnum/xxxx",
      "rel" : "self",
      "href" : "https://example.net/autnum/xxxx",
      "type" : "application/rdap+json"
    }
  ],
  "events" :

  [
    {
      "eventAction" : "registration",
      "eventDate" : "1990-12-31T23:59:59Z"
    },
    {
      "eventAction" : "last changed",
      "eventDate" : "1991-12-31T23:59:59Z"
    }
  ],
  "entities" :
  [
    {
      "objectClassName" : "entity",
      "handle" : "XXXX",
      "vcardArray":[
        "vcard",
        [
          ["version", {}, "text", "4.0"],
          ["fn", {}, "text", "Joe User"],
          ["kind", {}, "text", "individual"],
          ["lang", {
            "pref":"1"
          }, "language-tag", "fr"],
          ["lang", {
            "pref":"2"
          }, "language-tag", "en"],
          ["org", {
            "type":"work"
          }, "text", "Example"],
          ["title", {}, "text", "Research Scientist"],
          ["role", {}, "text", "Project Lead"],
          ["adr",
            { "type":"work" },
            "text",
            [
              "",
              "Suite 1234",
              "4321 Rue Somewhere",
              "Quebec",
              "QC",
              "G1V 2M2",
              "Canada"
            ]
          ],
          ["tel",
            { "type":["work", "voice"], "pref":"1" },
            "uri", "tel:+1-555-555-1234;ext=102"
          ],
          ["email",
            { "type":"work" },
            "text", "joe.user@example.com"
          ]
        ]
      ],
      "roles" : [ "registrant" ],
      "remarks" :
      [
        {
          "description" :
          [
            "She sells sea shells down by the sea shore.",
            "Originally written by Terry Sullivan."
          ]
        }
      ],
      "links" :
      [
        {
          "value" : "https://example.net/entity/XXXX",
          "rel" : "self",
          "href" : "https://example.net/entity/XXXX",
          "type" : "application/rdap+json"
        }
      ],
      "events" :
      [
        {
          "eventAction" : "registration",
          "eventDate" : "1990-12-31T23:59:59Z"
        },
        {
          "eventAction" : "last changed",
          "eventDate" : "1991-12-31T23:59:59Z"
        }
      ]
    }
  ]
}
]]></artwork>
	</figure>
	<t>
   The Autonomous System number object class can contain the following
   members:</t>

	<t><list style="symbols"><t>objectClassName -- the string "autnum"</t>

	<t>handle -- a string representing the RIR-unique identifier of the
      autnum registration</t>

	<t>startAutnum -- an unsigned 32-bit integer representing the starting number <xref target="RFC5396"/>
      in the block of Autonomous System numbers</t>

	<t>endAutnum -- an unsigned 32-bit integer representing the ending number <xref target="RFC5396"/> in
      the block of Autonomous System numbers</t>

	<t>name -- a string representing an identifier assigned to the autnum registration by the
      registration holder</t>

	<t>type -- a string containing an RIR-specific classification of the
      autnum</t>

	<t>status -- an array of strings indicating the state of the autnum as defined by <xref target="sect-4.6"/></t>

	<t>country -- a string containing the two-character country
      code of the autnum</t>

	<t>entities -- an array of entity objects as defined by <xref target="sect-5.1"/>
	</t>

	<t>remarks -- see <xref target="sect-4.3"/>
	</t>

	<t>links -- see <xref target="sect-4.2"/>
	</t>

	<t>port43 -- see <xref target="sect-4.7"/>
	</t>

	<t>events -- see <xref target="sect-4.5"/>
	</t>

	</list>
	</t>

	</section>

	</section>

	<section title="Error Response Body" anchor="sect-6"><t>
   Some non-answer responses may return entity bodies with information
   that could be more descriptive.</t>

	<t>
   The basic structure of that response is an object class containing an
   error code number (corresponding to the HTTP response code) followed
   by a string named "title" and an array of strings named
   "description".</t>

	<t>
   This is an example of the common response body.</t>

	<figure anchor="ure-28"><artwork><![CDATA[
{
  "errorCode": 418,
  "title": "Your Beverage Choice is Not Available",
  "description":
  [
    "I know coffee has more ummppphhh.",
    "Sorry, dude!"
  ]
}
]]></artwork>
	</figure>
	<t>
   This is an example of the common response body with an
   rdapConformance and notices data structures:</t>

	<figure anchor="ure-29"><artwork><![CDATA[
{
  "rdapConformance" :
  [
    "rdap_level_0"
  ],
  "notices" :
  [
    {
      "title" : "Beverage Policy",
      "description" :
      [
        "Beverages with caffeine for keeping horses awake."
      ],
      "links" :
      [
        {
          "value" : "https://example.net/ip/192.0.2.0/24",
          "rel" : "alternate",
          "type" : "text/html",
          "href" : "https://www.example.com/redaction_policy.html"
        }
      ]
    }
  ],
  "lang" : "en",
  "errorCode": 418,
  "title": "Your beverage choice is not available",
  "description":
  [
    "I know coffee has more ummppphhh.",
    "Sorry, dude!"
  ]
}
]]></artwork>
	</figure>
	</section>

	<section title="Responding to Help Queries" anchor="sect-7"><t>
   The appropriate response to /help queries as defined by <xref target="I-D.ietf-regext-rfc7482bis"/> is
   to use the notices structure as defined in <xref target="sect-4.3"/>.</t>

	<t>
   This is an example of a response to a /help query including the
   rdapConformance data structure.</t>

	<figure anchor="ure-30"><artwork><![CDATA[
{
  "rdapConformance" :
  [
    "rdap_level_0"
  ],
  "notices" :
  [
    {
      "title" : "Authentication Policy",
      "description" :
      [
        "Access to sensitive data for users with proper credentials."
      ],
      "links" :
      [
        {
          "value" : "https://example.net/help",
          "rel" : "alternate",
          "type" : "text/html",
          "href" : "https://www.example.com/auth_policy.html"
        }
      ]
    }
  ]
}
]]></artwork>
	</figure>
	</section>

	<section title="Responding To Searches" anchor="sect-8"><t>
   <xref target="I-D.ietf-regext-rfc7482bis"/> specifies three types of searches: domains, nameservers,
   and entities.  Responses to these searches take the form of an array
   of object instances where each instance is an appropriate object
   class for the search (i.e., a search for /domains yields an array of
   domain object instances).  These arrays are contained within the
   response object.</t>

	<t>
   The names of the arrays are as follows:</t>

	<t><list style="symbols"><t>for /domains searches, the array is "domainSearchResults"</t>

	<t>for /nameservers searches, the array is "nameserverSearchResults"</t>

	<t>for /entities searches, the array is "entitySearchResults"</t>

	</list>
	</t>

	<t>
   The following is an elided example of a response to a /domains
   search.</t>

	<figure anchor="ure-31"><artwork><![CDATA[
{
  "rdapConformance" :
  [
    "rdap_level_0"
  ],
  ...
  "domainSearchResults" :
  [
    {
      "objectClassName" : "domain",
      "handle" : "1-XXXX",
      "ldhName" : "1.example.com",
      ...
    },
    {
      "objectClassName" : "domain",
      "handle" : "2-XXXX",
      "ldhName" : "2.example.com",
      ...
    }
  ]
}
]]></artwork>
	</figure>
	</section>

	<section title="Indicating Truncated Responses" anchor="sect-9"><t>
   In cases where the data of a response needs to be limited or parts of
   the data need to be omitted, the response is considered "truncated".
   A truncated response is still valid JSON, but some of the results in
   a search set or some of the data in an object are not provided by the
   server.  A server may indicate this by including a typed notice in
   the response object.</t>

	<t>
   The following is an elided example of a search response that has been
   truncated.</t>

	<figure anchor="ure-32"><artwork><![CDATA[
{
  "rdapConformance" :
  [
    "rdap_level_0"
  ],
  "notices" :
  [
    {
      "title" : "Search Policy",
      "type" : "result set truncated due to authorization",
      "description" :
      [
        "Search results are limited to 25 per day per querying IP."
      ],
      "links" :
      [
        {
          "value" : "https://example.net/help",
          "rel" : "alternate",
          "type" : "text/html",
          "href" : "https://www.example.com/search_policy.html"
        }
      ]
    }
  ],
  "domainSearchResults" :
  [
    ...
  ]
}
]]></artwork>
	</figure>
	<t>
   A similar technique can be used with a typed remark where a single
   object has been returned and data in that object has been truncated.
   Such an example might be an entity object with only a partial set of
   the IP networks associated with it.</t>

	<t>
   The following is an elided example of an entity truncated data.</t>

	<figure anchor="ure-33"><artwork><![CDATA[
{
  "objectClassName" : "entity",
  "handle" : "ANENTITY",
  "roles" : [ "registrant" ],
  ...
  "entities" :
  [
    {
      "objectClassName" : "entity",
      "handle": "ANEMBEDDEDENTITY",
      "roles" : [ "technical" ],
      ...
    },
    ...
  ],
  "networks" :
  [
    ...
  ],
  ...
  "remarks" :
  [
    {
      "title" : "Data Policy",
      "type" : "object truncated due to unexplainable reason",
      "description" :
      [
        "Some of the data in this object has been removed."
      ],
      "links" :
      [
        {
          "value" : "https://example.net/help",
          "rel" : "alternate",
          "type" : "text/html",
          "href" : "https://www.example.com/data_policy.html"
        }
      ]
    }
  ]
}
]]></artwork>
	</figure>
	</section>

	<section title="IANA Considerations" anchor="sect-10"><section title="RDAP JSON Media Type Registration" anchor="sect-10.1"><t><list style="hanging" hangIndent="3"><t hangText="This specification registers the &quot;application/rdap+json&quot; media type.">
	<vspace blankLines="1"/>
	Type name: application
	<vspace blankLines="1"/>
	Subtype name: rdap+json
	<vspace blankLines="1"/>
	Required parameters: n/a
	<vspace blankLines="1"/>
	Encoding considerations: See Section 3.1 of <xref target="RFC6839"/>.
	<vspace blankLines="1"/>
	Security considerations: The media represented by this identifier
      does not have security considerations beyond that found in
      Section 12 of <xref target="RFC8259"/>.
	<vspace blankLines="1"/>
	Interoperability considerations: There are no known
      interoperability problems regarding this media format.
	<vspace blankLines="1"/>
	Published specification: RFC 7483
	<vspace blankLines="1"/>
	Applications that use this media type: Implementations of the
      Registration Data Access Protocol (RDAP).
	<vspace blankLines="1"/>
	Additional information: This media type is a product of the IETF
      WEIRDS working group.  The WEIRDS charter, information on the
      WEIRDS mailing list, and other documents produced by the WEIRDS
      working group can be found at
      <eref target="https://datatracker.ietf.org/wg/weirds/"/>.
	<vspace blankLines="1"/>
	Person &amp; email address to contact for further information: IESG
      &lt;iesg@ietf.org&gt;
	<vspace blankLines="1"/>
	Intended usage: COMMON
	<vspace blankLines="1"/>
	Restrictions on usage: none
	<vspace blankLines="1"/>
	Author: Andy Newton
	<vspace blankLines="1"/>
	Change controller: IETF
	<vspace blankLines="1"/>
	Provisional Registration: No (upon publication of this RFC)
	</t>

	</list>
	</t>

	</section>

	<section title="JSON Values Registry" anchor="sect-10.2"><t>
   IANA has created a category in the protocol registries labeled
   "Registration Data Access Protocol (RDAP)", and within that category,
   IANA has established a URL-referenceable, stand-alone registry
   labeled "RDAP JSON Values".  This new registry is for use in the
   notices and remarks (<xref target="sect-4.3"/>), status (<xref target="sect-4.6"/>), role
   (<xref target="sect-5.1"/>), event action (<xref target="sect-4.5"/>), and domain variant
   relation (<xref target="sect-5.3"/>) fields specified in RDAP.</t>

	<t>
   Each entry in the registry contains the following fields:</t>

	<t><list style="numbers"><t>Value -- the string value being registered.</t>

	<t>Type -- the type of value being registered.  It should be one of
       the following:<list style="symbols"><t>"notice or remark type" -- denotes a type of notice or remark.</t>

	<t>"status" -- denotes a value for the "status" object member as
          defined by <xref target="sect-4.6"/>.</t>

	<t>"role" -- denotes a value for the "role" array as defined in
          <xref target="sect-5.1"/>.</t>

	<t>"event action" -- denotes a value for an event action as
          defined in <xref target="sect-4.5"/>.</t>

	<t>"domain variant relation" -- denotes a relationship between a
          domain and a domain variant as defined in <xref target="sect-5.3"/>.</t>

	</list>
	</t>

	<t>Description -- a one- or two-sentence description regarding the
       meaning of the value, how it might be used, and/or how it should
       be interpreted by clients.</t>

	<t>Registrant Name -- the name of the person registering the value.</t>

	<t>Registrant Contact Information -- an email address, postal
       address, or some other information to be used to contact the
       registrant.</t>

	</list>
	</t>

	<t>
   This registry is operated under the "Expert Review" policy defined in
   <xref target="RFC8126"/>.</t>

	<t>
   Review of registrations into this registry by the designated
   expert(s) should be narrowly judged on the following criteria:</t>

	<t><list style="numbers"><t>Values in need of being placed into multiple types must be
       assigned a separate registration for each type.</t>

	<t>Values must be strings.  They should be multiple words separated
       by single space characters.  Every character should be
       lowercased.  If possible, every word should be given in English
       and each character should be US-ASCII.</t>

	<t>Registrations should not duplicate the meaning of any existing
       registration.  That is, if a request for a registration is
       significantly similar in nature to an existing registration, the
       request should be denied.  For example, the terms "maintainer"
       and "registrant" are significantly similar in nature as they both
       denote a holder of a domain name or Internet number resource.  In
       cases where it may be reasonably argued that machine
       interpretation of two similar values may alter the operation of
       client software, designated experts should not judge the values
       to be of significant similarity.</t>

	<t>Registrations should be relevant to the common usages of RDAP.
       Designated experts may rely upon the serving of the value by a
       DNR or RIR to make this determination.</t>

	</list>
	</t>

	<t>
   The following sections provide initial registrations into this
   registry.</t>

	<section title="Notice and Remark Types" anchor="sect-10.2.1"><t>
   The following values have been registered in the "RDAP JSON Values"
   registry:</t>
                            <t>
                                <list style="none">
                                    <t>Value: result set truncated due to authorization<vspace blankLines="0"/>
                                    Type: notice and remark type<vspace blankLines="0"/>
                                    Description: The list of results does not contain all results due to lack of authorization.
                                           This may indicate to some clients that proper authorization will yield a longer result
                                           set.<vspace blankLines="0"/>
                                    Registrant Name: IESG<vspace blankLines="0"/>
                                    Registrant Contact Information: iesg@ietf.org</t>
                                </list>
                            </t>
                            <t>
                                <list style="none">
                                    <t>Value: result set truncated due to excessive load<vspace blankLines="0"/>
                                    Type: notice and remark type<vspace blankLines="0"/>
                                    Description: The list of results does not contain all results due to excessively heavy load on the server.
                                        This may indicate to some clients that requerying at a later time will yield a longer result
                                        set.<vspace blankLines="0"/>
                                    Registrant Name: IESG<vspace blankLines="0"/>
                                    Registrant Contact Information: iesg@ietf.org</t>
                                </list>
                            </t>
                            <t>
                                <list style="none">
                                    <t>Value: result set truncated due to unexplainable reasons<vspace blankLines="0"/>
                                    Type: notice and remark type<vspace blankLines="0"/>
                                    Description: The list of results does not contain all results for an unexplainable reason.
                                        This may indicate to some clients that requerying for any reason will not yield a longer result set.<vspace blankLines="0"/>
                                    Registrant Name: IESG<vspace blankLines="0"/>
                                    Registrant Contact Information: iesg@ietf.org</t>
                                </list>
                            </t>
                            <t>
                                <list style="none">
                                    <t>Value: object truncated due to authorization<vspace blankLines="0"/>
                                    Type: notice and remark type<vspace blankLines="0"/>
                                    Description: The object does not contain all data due to lack of authorization.<vspace blankLines="0"/>
                                    Registrant Name: IESG<vspace blankLines="0"/>
                                    Registrant Contact Information: iesg@ietf.org</t>
                                </list>
                            </t>
                            <t>
                                <list style="none">
                                    <t>Value: object truncated due to excessive load<vspace blankLines="0"/>
                                    Type: notice and remark type<vspace blankLines="0"/>
                                    Description: The object does not contain all data due to excessively heavy load on the server.
                                        This may indicate to some clients that requerying at a later time will yield all data of the object.<vspace blankLines="0"/>
                                    Registrant Name: IESG<vspace blankLines="0"/>
                                    Registrant Contact Information: iesg@ietf.org</t>
                                </list>
                            </t>
                            <t>
                                <list style="none">
                                    <t>Value: object truncated due to unexplainable reasons<vspace blankLines="0"/>
                                    Type: notice and remark type<vspace blankLines="0"/>
                                    Description: The object does not contain all data for an unexplainable reason.<vspace blankLines="0"/>
                                    Registrant Name: IESG<vspace blankLines="0"/>
                                    Registrant Contact Information: iesg@ietf.org</t>
                                </list>
                            </t>
	</section>

	<section title="Status" anchor="sect-10.2.2">
	<t>The following values have been registered in the "RDAP JSON Values" registry:</t>
                        <t>
                            <list style="none">
                                <t>Value: validated<vspace blankLines="0"/>
                                Type: status<vspace blankLines="0"/>
                                Description: Signifies that the data of the object instance has been
                                    found to be accurate. This type of status is usually found on entity
                                    object instances to note the validity of identifying contact
                                    information.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: renew prohibited<vspace blankLines="0"/>
                                Type: status<vspace blankLines="0"/>
                                Description: Renewal or reregistration of the object instance is forbidden.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: update prohibited<vspace blankLines="0"/>
                                Type: status<vspace blankLines="0"/>
                                Description: Updates to the object instance are forbidden.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: transfer prohibited<vspace blankLines="0"/>
                                Type: status<vspace blankLines="0"/>
                                Description: Transfers of the registration from one registrar
                                    to another are forbidden. This type of status normally applies to DNR
                                    domain names.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: delete prohibited<vspace blankLines="0"/>
                                Type: status<vspace blankLines="0"/>
                                Description: Deletion of the registration of the object
                                    instance is forbidden. This type of status normally applies to DNR
                                    domain names.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: proxy<vspace blankLines="0"/>
                                Type: status<vspace blankLines="0"/>
                                Description: The registration of the object instance has been performed
                                    by a third party. This is most commonly applied to entities.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: private<vspace blankLines="0"/>
                                Type: status<vspace blankLines="0"/>
                                Description: The information of the object instance is not designated
                                    for public consumption. This is most commonly applied to entities.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: removed<vspace blankLines="0"/>
                                Type: status<vspace blankLines="0"/>
                                Description: Some of the information of the object instance has not
                                    been made available and has been removed. This is most commonly applied to entities.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: obscured<vspace blankLines="0"/>
                                Type: status<vspace blankLines="0"/>
                                Description: Some of the information of the object instance has been
                                    altered for the purposes of not readily revealing the actual information
                                    of the object instance. This is most commonly applied to entities.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: associated<vspace blankLines="0"/>
                                Type: status<vspace blankLines="0"/>
                                Description: The object instance is associated with other object instances
                                in the registry. This is most commonly used to signify that a nameserver is
                                associated with a domain or that an entity is associated with a network resource
                                or domain.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: active<vspace blankLines="0"/>
                                Type: status<vspace blankLines="0"/>
                                Description: The object instance is in use. For domain names, it signifies
                                that the domain name is published in DNS. For network and autnum registrations
                                it signifies that they are allocated or assigned for use in operational networks.
                                This maps to the Extensible Provisioning Protocol (EPP) <xref target="RFC5730"></xref> 'OK' status.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: inactive<vspace blankLines="0"/>
                                Type: status<vspace blankLines="0"/>
                                Description: The object instance is not in use. See 'active'.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: locked<vspace blankLines="0"/>
                                Type: status<vspace blankLines="0"/>
                                Description: Changes to the object instance cannot be made, including the association of other
                                object instances.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: pending create<vspace blankLines="0"/>
                                Type: status<vspace blankLines="0"/>
                                Description: A request has been received for the creation of the object instance but
                                this action is not yet complete.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: pending renew<vspace blankLines="0"/>
                                Type: status<vspace blankLines="0"/>
                                Description: A request has been received for the renewal of the object instance but
                                    this action is not yet complete.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: pending transfer<vspace blankLines="0"/>
                                Type: status<vspace blankLines="0"/>
                                Description: A request has been received for the transfer of the object instance but
                                    this action is not yet complete.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: pending update<vspace blankLines="0"/>
                                Type: status<vspace blankLines="0"/>
                                Description: A request has been received for the update or modification of the object instance but
                                    this action is not yet complete.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: pending delete<vspace blankLines="0"/>
                                Type: status<vspace blankLines="0"/>
                                Description: A request has been received for the deletion or removal of the object instance but
                                    this action is not yet complete. For domains, this might mean that the name is no longer published
                                in DNS but has not yet been purged from the registry database.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>

	</section>

	<section title="Event Actions" anchor="sect-10.2.3"><t>
   The following values have been registered in the "RDAP JSON Values"
   registry:</t>
                        <t>
                            <list style="none">
                                <t>Value: registration<vspace blankLines="0"/>
                                Type: event action<vspace blankLines="0"/>
                                Description: The object instance was initially registered.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: reregistration<vspace blankLines="0"/>
                                Type: event action<vspace blankLines="0"/>
                                Description: The object instance was registered subsequently to initial registration.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: last changed<vspace blankLines="0"/>
                                Type: event action<vspace blankLines="0"/>
                                Description: An action noting when the information in the object instance was last changed.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: expiration<vspace blankLines="0"/>
                                Type: event action<vspace blankLines="0"/>
                                Description: The object instance has been removed or will be removed at a pre-determined
                                    date and time from the registry.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: deletion<vspace blankLines="0"/>
                                Type: event action<vspace blankLines="0"/>
                                Description: The object instance was removed from the registry at a point in time that was not pre-determined.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: reinstantiation<vspace blankLines="0"/>
                                Type: event action<vspace blankLines="0"/>
                                Description: The object instance was reregistered after having been
                                    removed from the registry.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: transfer<vspace blankLines="0"/>
                                Type: event action<vspace blankLines="0"/>
                                Description: The object instance was transferred from one registrant to another.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: locked<vspace blankLines="0"/>
                                Type: event action<vspace blankLines="0"/>
                                Description: The object instance was locked (see the 'locked' status).<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: unlocked<vspace blankLines="0"/>
                                Type: event action<vspace blankLines="0"/>
                                Description: The object instance was unlocked (see the 'locked' status).<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
	</section>

	<section title="Roles" anchor="sect-10.2.4"><t>
   The following values have been registered in the "RDAP JSON Values"
   registry:</t>
                        <t>
                            <list style="none">
                                <t>Value: registrant<vspace blankLines="0"/>
                                Type: role<vspace blankLines="0"/>
                                Description: The entity object instance is the registrant of the
                                    registration. In some registries, this is known as a maintainer.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: technical<vspace blankLines="0"/>
                                Type: role<vspace blankLines="0"/>
                                Description: The entity object instance is a technical contact for the
                                    registration.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: administrative<vspace blankLines="0"/>
                                Type: role<vspace blankLines="0"/>
                                Description: The entity object instance is an administrative contact for
                                    the registration.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: abuse<vspace blankLines="0"/>
                                Type: role<vspace blankLines="0"/>
                                Description: The entity object instance handles network abuse issues on
                                    behalf of the registrant of the registration.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: billing<vspace blankLines="0"/>
                                Type: role<vspace blankLines="0"/>
                                Description: The entity object instance handles payment and billing
                                    issues on behalf of the registrant of the registration.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: registrar<vspace blankLines="0"/>
                                Type: role<vspace blankLines="0"/>
                                Description: The entity object instance represents the authority
                                    responsible for the registration in the registry.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: reseller<vspace blankLines="0"/>
                                Type: role<vspace blankLines="0"/>
                                Description: The entity object instance represents a third party
                                    through which the registration was conducted (i.e. not the registry or registrar).<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: sponsor<vspace blankLines="0"/>
                                Type: role<vspace blankLines="0"/>
                                Description: The entity object instance represents a domain policy
                                    sponsor, such as an ICANN approved sponsor.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: proxy<vspace blankLines="0"/>
                                Type: role<vspace blankLines="0"/>
                                Description: The entity object instance represents a proxy for another
                                entity object, such as a registrant.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: notifications<vspace blankLines="0"/>
                                Type: role<vspace blankLines="0"/>
                                Description: An entity object instance designated to receive notifications about
                                association object instances.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: noc<vspace blankLines="0"/>
                                Type: role<vspace blankLines="0"/>
                                Description: The entity object instance handles communications related to a
                                network operations center (NOC).<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
	</section>

	<section title="Variant Relations" anchor="sect-10.2.5"><t>
   The following values have been registered in the "RDAP JSON Values"
   registry:</t>
                        <t>
                            <list style="none">
                                <t>Value: registered<vspace blankLines="0"/>
                                Type: domain variant relation<vspace blankLines="0"/>
                                Description: The variant names are registered in the registry.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: unregistered<vspace blankLines="0"/>
                                Type: domain variant relation<vspace blankLines="0"/>
                                Description: The variant names are not found in the registry.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: registration restricted<vspace blankLines="0"/>
                                Type: domain variant relation<vspace blankLines="0"/>
                                Description: Registration of the variant names is
                                    restricted to certain parties or within certain rules.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: open registration<vspace blankLines="0"/>
                                Type: domain variant relation<vspace blankLines="0"/>
                                Description: Registration of the variant names is available to
                                    generally qualified registrants.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
                        <t>
                            <list style="none">
                                <t>Value: conjoined<vspace blankLines="0"/>
                                Type: domain variant relation<vspace blankLines="0"/>
                                Description: Registration of the variant names occurs automatically with the
                                    registration of the containing domain registration.<vspace blankLines="0"/>
                                Registrant Name: IESG<vspace blankLines="0"/>
                                Registrant Contact Information: iesg@ietf.org</t>
                            </list>
                        </t>
	</section>

	</section>

	</section>

    <section anchor="impl-status" title="Implementation Status">
      <t>NOTE: Please remove this section and the reference to RFC 7942 prior to publication as an RFC.</t>
	      
      <t>This section records the status of known implementations of the protocol defined by this specification at the time of posting of this Internet-Draft, and is based on a proposal described in RFC 7942 <xref target="RFC7942"/>. The description of implementations in this section is intended to assist the IETF in its decision processes in progressing drafts to RFCs. Please note that the listing of any individual implementation here does not imply endorsement by the IETF. Furthermore, no effort has been spent to verify the information presented here that was supplied by IETF contributors. This is not intended as, and must not be construed to be, a catalog of available implementations or their features. Readers are advised to note that other implementations may exist.</t>
	      
      <t>According to RFC 7942, "this will allow reviewers and working groups to assign due consideration to documents that have the benefit of running code, which may serve as evidence of valuable experimentation and feedback that have made the implemented protocols more mature. It is up to the individual working groups to use this information as they see fit".</t>
	      
      <section anchor="reddog" title="RedDog">
        <t><list style="none">
	  <t>Responsible Organization: NIC Mexico</t>
	  <t>Location: https://reddog.mx/</t>
	  <t>Description: RedDog implements all the functionality of an RDAP Server defined in RFCs 7480,7481,7482 and 7483. RedDog is highly configurable and extensible to fit the needs of the developers and operators.</t>
	  <t>Level of Maturity: Production.</t>
	  <t>Coverage: RedDog supports all lookups, searches and responses for all object classes described in RFC 7482 and RFC 7483.</t>
	  <t>Version Compatibility: RFC 7482 and RFC 7483</t>
	  <t>Licensing: Apache License 2.0</t>
	  <t>Contact Information: reddog-dev@nic.mx</t>
	  <t>Information last updated: November 22, 2019</t>
	</list></t>
      </section>
	      
      <section anchor="vrsn" title="Verisign">
        <t><list style="none">
	  <t>Responsible Organization: Verisign</t>
	  <t>Location: https://rdap.verisign.com/com/v1/, https://rdap.verisign.com/net/v1/</t>
	  <t>Description: Verisign's production RDAP service for the .com and .net gTLDs.</t>
	  <t>Level of Maturity: Production.</t>
	  <t>Coverage: Lookup of domain names, name servers, entities; name server search by IP address; help.</t>
	  <t>Version Compatibility: RFC 7483</t>
	  <t>Contact Information: info@verisign-grs.com</t>
	</list></t>
      </section>
	      
      <section anchor="vrsnlabs" title="Verisign Labs">
        <t><list style="none">
	  <t>Responsible Organization: Verisign Labs</t>
	  <t>Location: https://rdap.verisignlabs.com/rdap/v1/</t>
	  <t>Description: Verisign's experimental RDAP service for the .cc and .tv ccTLDs.</t>
	  <t>Level of Maturity: Experimental.</t>
	  <t>Coverage: Lookup of domain names, name servers, entities; name server search by IP address; basic search; regular expression search; federated authentication; help.</t>
	  <t>Version Compatibility: RFC 7483</t>
	  <t>Contact Information: Scott Hollenbeck, shollenbeck@verisign.com</t>
	</list></t>
      </section>
	      
      <section anchor="apnic" title="Asia-Pacific Network Information Centre (APNIC)">
        <t><list style="none">
	  <t>Responsible Organization: Asia-Pacific Network Information Centre (APNIC)
</t>
	  <t>Location: https://rdap.apnic.net/, https://github.com/APNIC-net/rdapd</t>
	  <t>Description: APNIC's production RDAP service for Internet numberresouces.</t>
	  <t>Level of Maturity: Production.</t>
	  <t>Coverage: Lookup of IP networks, AS numbers, domains, and entities.  Also domain search by name, entity search by handle or full name, and help responses.</t>
	  <t>Version Compatibility: RFC 7483</t>
	  <t>Contact Information: helpdesk@apnic.net</t>
	</list></t>
      </section>
    </section>

	<section title="Security Considerations" anchor="sect-11"><t>
   This specification models information serialized in JSON format.  As
   JSON is a subset of JavaScript, implementations are advised to follow
   the security considerations outlined in Section 12 of <xref target="RFC8259"/> to
   prevent code injection.</t>

	<t>
   Though not specific to JSON, RDAP implementers should be aware of the
   security considerations specified in <xref target="RFC7480"/> and the security
   requirements and considerations in <xref target="RFC7481"/>.</t>

	<t>
   Clients caching data, especially clients using RDAP-specific caches
   (instead of HTTP-layer caches), should have safeguards to prevent
   cache poisoning.  See <xref target="sect-5"/> for advice on using the self links
   for caching.</t>

	<t>
   Finally, service operators should be aware of the privacy mechanisms
   noted in <xref target="sect-13"/>.</t>

	</section>

	<section title="Internationalization Considerations" anchor="sect-12"><section title="Character Encoding" anchor="sect-12.1"><t>
   The default text encoding for JSON responses in RDAP is UTF-8
   <xref target="RFC3629"/>, and all servers and clients MUST support UTF-8.</t>

	</section>

	<section title="URIs and IRIs" anchor="sect-12.2"><t>
   <xref target="RFC7480"/> defines the use of URIs and IRIs in RDAP.</t>

	</section>

	<section title="Language Tags" anchor="sect-12.3"><t>
   <xref target="sect-4.4"/> defines the use of language tags in the JSON responses
   defined in this document.</t>

	</section>

	<section title="Internationalized Domain Names" anchor="sect-12.4"><t>
   IDNs are denoted in this specification by the separation of DNS names
   in LDH form and Unicode form (see <xref target="sect-3"/>).  Representation of IDNs
   in registries is described by the "variants" object in <xref target="sect-5.3"/>
   and the suggested values listed in <xref target="sect-10.2.5"/>.</t>

	</section>

	</section>

	<section title="Privacy Considerations" anchor="sect-13"><t>
   This specification suggests status values to denote contact and
   registrant information that has been marked as private and/or has
   been removed or obscured.  See <xref target="sect-10.2.2"/> for the complete list
   of status values.  A few of the status values indicate that there are
   privacy concerns associated with the object instance.  The following
   status codes SHOULD be used to describe data elements of a response
   when appropriate:</t>

	<t><list hangIndent="3" style="hanging"><t>
      private -- The object is not be shared in query responses, unless
      the user is authorized to view this information.</t>

	</list>
	</t>

	<t><list hangIndent="3" style="hanging"><t>
      removed -- Data elements within the object have been collected but
      have been omitted from the response.  This option can be used to
      prevent unauthorized access to associated object instances without
      the need to mark them as private.</t>

	</list>
	</t>

	<t><list hangIndent="3" style="hanging"><t>
      obscured -- Data elements within the object have been collected,
      but the response value has been altered so that values are not
      easily discernible.  A value changed from "1212" to "XXXX" is an
      example of obscured data.  This option may reveal privacy
      sensitive information and should only be used when data
      sensitivity does not require a more protective option like
      "private" or "removed".</t>

	</list>
	</t>

	<t>
   See Appendix A.1 for an example of applying those values to contacts
   and registrants.</t>

	</section>

	</middle>

	<back>
	<references title="Normative References">
	<reference anchor="ISO.3166.1988"><front>
	<title>Codes for the representation of names of countries, 3rd edition</title>
	<author>
	<organization>International Organization for Standardization</organization>
	</author>

	<date month="August" year="1988"/>
	</front>

	<seriesInfo name="ISO" value="Standard 3166"/>
	</reference>
	&RFC2119;
	&RFC3339;
	&RFC3629;
	&RFC3986;
	&RFC4034;
	&RFC5396;
	&RFC5646;
	&RFC5890;
	&RFC5952;
	&RFC7095;
	&RFC7480;
	&RFC7481;
	&RFC8126;
	&RFC8259;
	&RFC8288;
    &I-D.ietf-regext-rfc7482bis;
	</references>
	<references title="Informative References">
	<reference anchor="IANA_IDNTABLES" target="https://www.iana.org/domains/idn-tables"><front>
	<title>Repository of IDN Practices</title>
	<author>
	<organization>IANA</organization>
	</author>

	<date/>
	</front>

	</reference>
	<reference anchor="JSON_ascendancy" target="https://devcentral.f5.com/s/articles/the-stealthy-ascendancy-of-json"><front>
	<title>The Stealthy Ascendancy of JSON</title>
	<author fullname="L. MacVittie" initials="L." surname="MacVittie">
	</author>

	<date month="April" year="2011"/>
	</front>

	</reference>
	<reference anchor="JSON_performance_study" target="https://www.cs.montana.edu/izurieta/pubs/caine2009.pdf"><front>
	<title>Comparison of JSON and XML Data Interchange Formats: A Case Study</title>
	<author fullname="N. Nurseitov" initials="N." surname="Nurseitov">
	</author>

	<author fullname="M. Paulson" initials="M." surname="Paulson">
	</author>

	<author fullname="R. Reynolds" initials="R." surname="Reynolds">
	</author>

	<author fullname="C. Izurieta" initials="C." surname="Izurieta">
	</author>

	<date year="2009"/>
	</front>

	</reference>
	&RFC3912;
	&RFC5730;
	&RFC5910;
	&RFC6350;
	&RFC6839;
	&RFC7942;
	</references>
	<section title="Suggested Data Modeling with the Entity Object Class" anchor="sect-a"><section title="Registrants and Contacts" anchor="sect-a.1"><t>
   This document does not provide specific object classes for
   registrants and contacts.  Instead, the entity object class may be
   used to represent a registrant or contact.  When the entity object is
   embedded inside a containing object such as a domain name or IP
   network, the "roles" string array can be used to signify the
   relationship.  It is recommended that the values from <xref target="sect-10.2.4"/>
   be used.</t>

	<t>
   The following is an example of an elided containing object with an
   embedded entity that is both a registrant and administrative contact:</t>

	<figure anchor="ure-34"><artwork><![CDATA[
{
  ...
  "entities" :
  [
    {
      "objectClassName" : "entity",
      "handle" : "XXXX",
      "vcardArray":[
        "vcard",
        [
          ["version", {}, "text", "4.0"],
          ["fn", {}, "text", "Joe User"],
          ["kind", {}, "text", "individual"],
          ["lang", {
            "pref":"1"
          }, "language-tag", "fr"],
          ["lang", {
            "pref":"2"
          }, "language-tag", "en"],
          ["org", {
            "type":"work"
          }, "text", "Example"],
          ["title", {}, "text", "Research Scientist"],
          ["role", {}, "text", "Project Lead"],
          ["adr",
            { "type":"work" },
            "text",
            [
              "",
              "Suite 1234",
              "4321 Rue Somewhere",
              "Quebec",
              "QC",
              "G1V 2M2",
              "Canada"
            ]
          ],
          ["tel",
            { "type":["work", "voice"], "pref":"1" },
            "uri", "tel:+1-555-555-1234;ext=102"
          ],
          ["email",
            { "type":"work" },
            "text", "joe.user@example.com"
          ]
        ]
      ],
      "roles" : [ "registrant", "administrative" ],
      "remarks" :
      [
        {
          "description" :
          [
            "She sells sea shells down by the sea shore.",
            "Originally written by Terry Sullivan."
          ]
        }
      ],
      "events" :
      [
        {
          "eventAction" : "registration",
          "eventDate" : "1990-12-31T23:59:59Z"
        },
        {
          "eventAction" : "last changed",
          "eventDate" : "1991-12-31T23:59:59Z"
        }
      ]
    }
  ]
}
]]></artwork>
	</figure>
	<t>
   In many use cases, it is necessary to hide or obscure the information
   of a registrant or contact due to policy or other operational
   matters.  Registries can denote these situations with "status" values
   (see <xref target="sect-10.2.2"/>).</t>

	<t>
   The following is an elided example of a registrant with information
   changed to reflect that of a third party.</t>

	<figure anchor="ure-35"><artwork><![CDATA[
{
  ...
  "entities" :
  [
    {
      "objectClassName" : "entity",
      "handle" : "XXXX",
      ...
      "roles" : [ "registrant", "administrative" ],
      "status" : [ "proxy", "private", "obscured" ]
    }
  ]
}
]]></artwork>
	</figure>
	</section>

	<section title="Registrars" anchor="sect-a.2"><t>
   This document does not provide a specific object class for
   registrars, but like registrants and contacts (see Appendix A.1), the
   "roles" string array maybe used.  Additionally, many registrars have
   publicly assigned identifiers.  The publicIds structure (<xref target="sect-4.8"/>)
   represents that information.</t>

	<t>
   The following is an example of an elided containing object with an
   embedded entity that is a registrar:</t>

	<figure anchor="ure-36"><artwork><![CDATA[
{
  ...
  "entities":[
    {
      "objectClassName" : "entity",
      "handle":"XXXX",
      "vcardArray":[
        "vcard",
        [
          ["version", {}, "text", "4.0"],
          ["fn", {}, "text", "Joe's Fish, Chips, and Domains"],
          ["kind", {}, "text", "org"],
          ["lang", {
            "pref":"1"
          }, "language-tag", "fr"],
          ["lang", {
            "pref":"2"
          }, "language-tag", "en"],
          ["org", {
            "type":"work"
          }, "text", "Example"],
          ["adr",
            { "type":"work" },
            "text",
            [
              "",
              "Suite 1234",
              "4321 Rue Somewhere",
              "Quebec",
              "QC",
              "G1V 2M2",
              "Canada"
            ]
          ],
          ["tel",
            {
              "type":["work", "voice"],
              "pref":"1"
            },
            "uri", "tel:+1-555-555-1234;ext=102"
          ],
          ["email",
            { "type":"work" },
            "text", "joes_fish_chips_and_domains@example.com"
          ]
        ]
      ],
      "roles":[ "registrar" ],
      "publicIds":[
        {
          "type":"IANA Registrar ID",
          "identifier":"1"
        }
      ],
      "remarks":[
        {
          "description":[
            "She sells sea shells down by the sea shore.",
            "Originally written by Terry Sullivan."
          ]
        }
      ],
      "links":[
        {
          "value":"https://example.net/entity/XXXX",
          "rel":"alternate",
          "type":"text/html",
          "href":"https://www.example.com"
        }
      ]
    }
  ]
}
]]></artwork>
	</figure>
	</section>

	</section>

	<section title="Modeling Events" anchor="sect-b"><t>
   Events represent actions that have taken place against a registered
   object at a certain date and time.  Events have three properties: the
   action, the actor, and the date and time of the event (which is
   sometimes in the future).  In some cases, the identity of the actor
   is not captured.</t>

	<t>
   Events can be modeled in three ways:</t>

	<t><list style="numbers"><t>events with no designated actor</t>

	<t>events where the actor is only designated by an identifier</t>

	<t>events where the actor can be modeled as an entity</t>

	</list>
	</t>

	<t>
   For the first use case, the events data structure (<xref target="sect-4.5"/>) is
   used without the "eventActor" object member.</t>

	<t>
   This is an example of an "events" array without the "eventActor".</t>

	<figure anchor="ure-37"><artwork><![CDATA[
"events" :
[
  {
    "eventAction" : "registration",
    "eventDate" : "1990-12-31T23:59:59Z"
  }
]
]]></artwork>
	</figure>
	<t>
   For the second use case, the events data structure (<xref target="sect-4.5"/>) is
   used with the "eventActor" object member.</t>

	<t>
   This is an example of an "events" array with the "eventActor".</t>

	<figure anchor="ure-38"><artwork><![CDATA[
"events" :
[
  {
    "eventAction" : "registration",
    "eventActor" : "XYZ-NIC",
    "eventDate" : "1990-12-31T23:59:59Z"
  }
]
]]></artwork>
	</figure>
	<t>
   For the third use case, the "asEventActor" array is used when an
   entity (<xref target="sect-5.1"/>) is embedded into another object class.  The
   "asEventActor" array follows the same structure as the "events" array
   but does not have "eventActor" attributes.</t>

	<t>
   The following is an elided example of a domain object with an entity
   as an event actor.</t>

	<figure anchor="ure-39"><artwork><![CDATA[
{
  "objectClassName" : "domain",
  "handle" : "XXXX",
  "ldhName" : "foo.example",
  "status" : [ "locked", "transfer prohibited" ],
  ...
  "entities" :
  [
    {
      "handle" : "XXXX",
      ...
      "asEventActor" :
      [
        {
          "eventAction" : "last changed",
          "eventDate" : "1990-12-31T23:59:59Z"
        }
      ]
    }
  ]
}
]]></artwork>
	</figure>
	</section>

	<section title="Structured vs. Unstructured Addresses" anchor="sect-c"><t>
   The entity (<xref target="sect-5.1"/>) object class uses jCard <xref target="RFC7095"/> to
   represent contact information, including postal addresses. jCard has
   the ability to represent multiple language preferences, multiple
   email address and phone numbers, and multiple postal addresses in
   both a structured and unstructured format.  This section describes
   the use of jCard for representing structured and unstructured
   addresses.</t>

	<t>
   The following is an example of a jCard.</t>

	<figure anchor="ure-40"><artwork><![CDATA[
{
  "vcardArray":[
    "vcard",
    [
      ["version", {}, "text", "4.0"],
      ["fn", {}, "text", "Joe User"],
      ["n", {}, "text",
        ["User", "Joe", "", "", ["ing. jr", "M.Sc."]]
      ],
      ["kind", {}, "text", "individual"],
      ["lang", {
        "pref":"1"
      }, "language-tag", "fr"],
      ["lang", {
        "pref":"2"
      }, "language-tag", "en"],
      ["org", {
        "type":"work"
      }, "text", "Example"],
      ["title", {}, "text", "Research Scientist"],
      ["role", {}, "text", "Project Lead"],
      ["adr",
        { "type":"work" },
        "text",
        [
          "",
          "Suite 1234",
          "4321 Rue Somewhere",
          "Quebec",
          "QC",
          "G1V 2M2",
          "Canada"
        ]
      ],
      ["adr",
        {

          "type":"home",
          "label":"123 Maple Ave\nSuite 90001\nVancouver\nBC\n1239\n"
        },
        "text",
        [
          "", "", "", "", "", "", ""
        ]
      ],
      ["tel",
        { "type":["work", "voice"], "pref":"1" },
        "uri", "tel:+1-555-555-1234;ext=102"
      ],
      ["tel",
        {
          "type":["work", "cell", "voice", "video", "text"]
        },
        "uri",
        "tel:+1-555-555-1234"
      ],
      ["email",
        { "type":"work" },
        "text", "joe.user@example.com"
      ],
      ["geo", {
        "type":"work"
      }, "uri", "geo:46.772673,-71.282945"],
      ["key",
        { "type":"work" },
        "uri", "https://www.example.com/joe.user/joe.asc"
      ],
      ["tz", {},
        "utc-offset", "-05:00"],
      ["url", { "type":"home" },
        "uri", "https://example.org"]
    ]
  ]
}
]]></artwork>
	</figure>
	<t>
   The arrays in Figure 40 with the first member of "adr" represent
   postal addresses.  In the first example, the postal address is given
   as an array of strings and constitutes a structured address.  For
   components of the structured address that are not applicable, an
   empty string is given.  Each member of that array aligns with the
   positions of a vCard as given in <xref target="RFC6350"/>.  In this example, the
   following data corresponds to the following positional meanings:</t>

	<t><list style="numbers"><t>post office box -- not applicable; empty string</t>

	<t>extended address (e.g., apartment or suite number) -- Suite 1234</t>

	<t>street address -- 4321 Rue Somewhere</t>

	<t>locality (e.g., city) -- Quebec</t>

	<t>region (e.g., state or province) -- QC</t>

	<t>postal code -- G1V 2M2</t>

	<t>country name (full name) -- Canada</t>

	</list>
	</t>

	<t>
   The second example is an unstructured address.  It uses the "label"
   attribute, which is a string containing a newline (\n) character to
   separate address components in an unordered, unspecified manner.
   Note that in this example, the structured address array is still
   given but that each string is an empty string.</t>

	</section>

	<section title="Secure DNS" anchor="sect-d"><t>
   <xref target="sect-5.3"/> defines the "secureDNS" member to represent secure DNS
   information about domain names.</t>

	<t>
   DNSSEC provides data integrity for DNS through the digital signing of
   resource records.  To enable DNSSEC, the zone is signed by one or
   more private keys and the signatures are stored as RRSIG records.  To
   complete the chain of trust in the DNS zone hierarchy, a digest of
   each DNSKEY record (which contains the public key) must be loaded
   into the parent zone, stored as DS records, and signed by the
   parent's private key (RRSIG DS record), as indicated in "Resource Records for the DNS Security Extensions" <xref target="RFC4034"/>.  Creating the DS
   records in the parent zone can be done by the registration authority
   "Domain Name System (DNS) Security Extensions Mapping for the Extensible Provisioning Protocol (EPP)" <xref target="RFC5910"/>.</t>

	<t>
   Only DS-related information is provided by RDAP, since other
   information is not generally stored in the registration database.
   Other DNSSEC-related information can be retrieved with other DNS
   tools such as dig.</t>

	<t>
   The domain object class (<xref target="sect-5.3"/>) can represent this information
   using either the "dsData" or "keyData" object arrays.  Client
   implementers should be aware that some registries do not collect or
   do not publish all of the secure DNS meta-information.</t>

	</section>

	<section title="Motivations for Using JSON" anchor="sect-e"><t>
   This section addresses a common question regarding the use of JSON
   over other data formats, most notably XML.</t>

	<t>
   It is often pointed out that many DNRs and one RIR support the EPP
   <xref target="RFC5730"/> standard, which is an XML serialized protocol.  The logic
   is that since EPP is a common protocol in the industry, it follows
   that XML would be a more natural choice.  While EPP does influence
   this specification quite a bit, EPP serves a different purpose, which
   is the provisioning of Internet resources between registries and
   accredited registrars and serving a much narrower audience than that
   envisioned for RDAP.</t>

	<t>
   By contrast, RDAP has a broader audience and is designed for public
   consumption of data.  Experience from RIRs with first generation
   RESTful web services for WHOIS indicate that a large percentage of
   clients operate within browsers and other platforms where full-blown
   XML stacks are not readily available and where JSON is a better fit.</t>

	<t>
   Additionally, while EPP is used in much of the DNR community it is
   not a universal constant in that industry.  And finally, EPP's use of
   XML predates the specification of JSON.  If EPP had been defined
   today, it may very well have used JSON instead of XML.</t>

	<t>
   Beyond the specific DNR and RIR communities, the trend in the broader
   Internet industry is also switching to JSON over XML, especially in
   the area of RESTful web services (see <xref target="JSON_ascendancy"/>).  Studies
   have also found that JSON is generally less bulky and consequently
   faster to parse (see <xref target="JSON_performance_study"/>).</t>

	</section>

	<section title="Acknowledgements" numbered="no" anchor="acknowledgements"><t>
   This document is derived from original work on RIR responses in JSON
   by Byron J. Ellacott, Arturo L. Servin, Kaveh Ranjbar, and Andrew L.
   Newton.  Additionally, this document incorporates work on DNR
   responses in JSON by Ning Kong, Linlin Zhou, Jiagui Xie, and Sean
   Shen.</t>

	<t>
   The components of the DNR object classes are derived from a
   categorization of WHOIS response formats created by Ning Kong, Linlin
   Zhou, Guangqing Deng, Steve Sheng, Francisco Arias, Ray Bellis, and
   Frederico Neves.</t>

	<t>
   Tom Harrison, Murray Kucherawy, Ed Lewis, Audric Schiltknecht, Naoki
   Kambe, Maarten Bosteels, Mario Loffredo, and Jasdip Singh contributed significant review comments
   and provided clarifying text.  James Mitchell provided text regarding
   the processing of unknown JSON attributes and identified issues
   leading to the remodeling of events.  Ernie Dainow and Francisco
   Obispo provided concrete suggestions that led to a better variant
   model for domain names.</t>

	<t>
   Ernie Dainow provided the background information on the secure DNS
   attributes and objects for domains, informative text on DNSSEC, and
   many other attributes that appear throughout the object classes of
   this document.</t>

	<t>
   The switch to and incorporation of jCard was performed by Simon
   Perreault.</t>

	<t>
   Olaf Kolkman and Murray Kucherawy chaired the IETF's WEIRDS working
   group from which this document was originally created. James Galvin
   and Antoin Verschuren chaired the REGEXT working group that worked
   on the -bis version.</t>

	</section>
	
	<section title="Changes from RFC 7483" numbered="no"><t>
          <list style="hanging">
	    <t hangText="00:">Initial version ported from RFC 7483. Addressed known errata. Added Implementation Status section.</t>		
	    <t hangText="01:">Updated references to 7482 to 7482bis Internet-Draft. Updated "Change Log" to "Changes from RFC 7483". Added APNIC implementation status. Adjusted case of "xxxx" used in examples where "XXXX" was previously used, and removed an "X" from "XXXXX". Changed IPv6 address example using "C00" to "c00". Added "a string representing" to the definitions of startAddress and endAddress. Removed "entity" from "Autonomous System Number Entity Object Class". Added "an unsigned 32-bit integer" to the definition of startAutnum and endAutnum. Added "a string representing" to the definition of name in the IP network and ASN object classes. Clarified rdapConformance identifier registration expectations in Section 4.1. Changed "lunarNic_level_0" to "lunarNIC_level_0". Clarified that the "value", "rel" and "href" JSON values MUST be specified in the "links" array. Clarified that the "description" array is required in the Notices and Remarks data structures and other values are OPTIONAL. Noted that all members of the "events" and "Public IDs" arrays are REQUIRED. Fix "self" link values in examples. Changed "http" to "https" link values in examples. Noted that Figure 18 is an example of a nameserver object with all "appropriate" values given. In appendix C, quoted the word "label" in "label attribute". Added referencce to "status" definition in the descriptions for IP networks and autnums. Fixed a 404 for the informative reference to "The Stealthy Ascendancy of JSON". Added "boolean" to the definition of zoneSigned. Clarified REQUIRED and OPTIONAL members of the "events" array. Changed "SHOULD not" to "SHOULD NOT" in <xref target="sect-5"/>. Updated normative references (5226-8126, 5988-8288, 7159-8259). Changed examples using "ns1.xn--fo-5ja.example" to split URLs to avoid long lines.</t>
	    <t hangText="00:">Initial working group version. Added acknowledgements.</t>
	  </list>
	  </t>
        </section>

	</back>

	</rfc>
	
